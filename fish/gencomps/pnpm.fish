complete -f -c pnpm -n __fish_use_subcommand -a run -d 'Runs a defined package script'
complete -c pnpm -n '__fish_seen_subcommand_from run' -l aggregate-output -d 'Aggregate output from child processes that are run'
complete -c pnpm -n '__fish_seen_subcommand_from run' -s C -l dir -d '<dir>             Change to directory <dir> (default:'
complete -c pnpm -n '__fish_seen_subcommand_from run' -s h -l help -d 'Output usage information'
complete -c pnpm -n '__fish_seen_subcommand_from run' -l if-present -d 'Avoid exiting with a non-zero exit code when the'
complete -c pnpm -n '__fish_seen_subcommand_from run' -l loglevel -d '<level>      What level of logs to report. Any logs at or'
complete -c pnpm -n '__fish_seen_subcommand_from run' -l no-bail -d 'The command will exit with a 0 exit code even if'
complete -c pnpm -n '__fish_seen_subcommand_from run' -l parallel -d 'Completely disregard concurrency and topological'
complete -c pnpm -n '__fish_seen_subcommand_from run' -s r -l recursive -d 'Run the defined package script in every package'
complete -c pnpm -n '__fish_seen_subcommand_from run' -l report-summary -d 'Save the execution results of every package to'
complete -c pnpm -n '__fish_seen_subcommand_from run' -l reporter-hide-prefix -d 'Hide project name prefix from output of running'
complete -c pnpm -n '__fish_seen_subcommand_from run' -l resume-from -d 'Command executed from given package'
complete -c pnpm -n '__fish_seen_subcommand_from run' -l sequential -d 'Run the specified scripts one by one'
complete -c pnpm -n '__fish_seen_subcommand_from run' -l stream -d 'Stream output from child processes immediately,'
complete -c pnpm -n '__fish_seen_subcommand_from run' -l use-stderr -d 'Divert all output to stderr'
complete -c pnpm -n '__fish_seen_subcommand_from run' -s w -l workspace-root -d 'Run the command on the root workspace project'
complete -c pnpm -n '__fish_seen_subcommand_from run' -l changed-files-ignore-pattern -d '<pattern>  Defines files to ignore when'
complete -c pnpm -n '__fish_seen_subcommand_from run' -l fail-if-no-match -d 'If no projects are matched by'
complete -c pnpm -n '__fish_seen_subcommand_from run' -l filter -d '!<selector>                      If a selector starts with ! (or'
complete -c pnpm -n '__fish_seen_subcommand_from run' -l filter -d '!foo" selects all'
complete -c pnpm -n '__fish_seen_subcommand_from run' -l filter -d '.                                Includes all packages that are'
complete -c pnpm -n '__fish_seen_subcommand_from run' -l filter -d '...^<pattern>                    Includes only the direct and'
complete -c pnpm -n '__fish_seen_subcommand_from run' -l filter -d '...<pattern>                     Includes all direct and indirect'
complete -c pnpm -n '__fish_seen_subcommand_from run' -l filter -d './<dir>                          Includes all packages that are'
complete -c pnpm -n '__fish_seen_subcommand_from run' -l filter -d '"[<since>]"                      Includes all packages changed'
complete -c pnpm -n '__fish_seen_subcommand_from run' -l filter -d '{<dir>}                          Includes all projects that are'
complete -c pnpm -n '__fish_seen_subcommand_from run' -l filter -d '<pattern>                        Restricts the scope to package'
complete -c pnpm -n '__fish_seen_subcommand_from run' -l filter -d '<pattern>...                     Includes all direct and indirect'
complete -c pnpm -n '__fish_seen_subcommand_from run' -l filter -d '<pattern>^...                    Includes only the direct and'
complete -c pnpm -n '__fish_seen_subcommand_from run' -l filter-prod -d '<pattern>                   Restricts the scope to package'
complete -c pnpm -n '__fish_seen_subcommand_from run' -l test-pattern -d '<pattern>                  Defines files related to tests.'
complete -c pnpm -s r -l recursive -d 'Run the command for each project in the workspace.'
