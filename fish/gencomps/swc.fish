complete -c swc -s f -l filename -d '[filename]                   filename to use when reading from stdin - this will be used in source-maps, errors etc'
complete -c swc -l config-file -d '[path]                        Path to a .swcrc file to use'
complete -c swc -l env-name -d \[name\]\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ The\ name\ of\ the\ \'env\'\ to\ use\ when\ loading\ configs\ and\ plugins.\ Defaults\ to\ the\ value\ of\ SWC_ENV,\ or\ else\ NODE_ENV,\ or\ else\ \'development\'.
complete -c swc -l no-swcrc -d 'Whether or not to look up .swcrc files'
complete -c swc -l delete-dir-on-start -d 'Whether or not delete output directory on start'
complete -c swc -l ignore -d '[list]                             list of glob paths to **not** compile'
complete -c swc -l only -d '[list]                               list of glob paths to **only** compile'
complete -c swc -s w -l watch -d 'Recompile files on changes'
complete -c swc -s q -l quiet -d 'Suppress compilation output'
complete -c swc -s s -l source-maps -d '[true|false|inline|both]  generate source maps'
complete -c swc -l source-map-target -d '[string]                set `file` on returned source map'
complete -c swc -l source-file-name -d '[string]                 set `sources[0]` on returned source map'
complete -c swc -l source-root -d '[filename]                    the root from which all sources are relative'
complete -c swc -s o -l out-file -d '[out]                        Compile all input files into a single file'
complete -c swc -s d -l out-dir -d '[out]                         Compile an input directory of modules into an output directory'
complete -c swc -s D -l copy-files -d 'When compiling a directory copy over non-compilable files'
complete -c swc -l include-dotfiles -d 'Include dotfiles when compiling and copying non-compilable files'
complete -c swc -s C -l config -d '<config>                       Override a config from .swcrc file. e.g. -C module.type=amd -C module.moduleId=hello'
complete -c swc -l sync -d 'Invoke swc synchronously. Useful for debugging.'
complete -c swc -l log-watch-compilation -d 'Log a message when a watched file is successfully compiled (default: true)'
complete -c swc -l extensions -d '[list]                         Use specific extensions'
complete -c swc -n __fish_no_arguments -s V -l version -d 'output the version number'
complete -c swc -s h -l help -d 'display help for command'
