complete -c cmake -s S -d '<path-to-source>          = Explicitly specify a source directory.'
complete -c cmake -s B -d '<path-to-build>           = Explicitly specify a build directory.'
complete -c cmake -s C -d '<initial-cache>           = Pre-load a script to populate the cache.'
complete -c cmake -s D -d '<var>[:<type>]=<value>    = Create or update a cmake cache entry.'
complete -c cmake -s U -d '<globbing_expr>           = Remove matching entries from CMake cache.'
complete -c cmake -s G -d '<generator-name>          = Specify a build system generator.'
complete -c cmake -s T -d '<toolset-name>            = Specify toolset name if supported by'
complete -c cmake -s A -d '<platform-name>           = Specify platform name if supported by'
complete -c cmake -l toolchain -d '<file>           = Specify toolchain file'
complete -c cmake -l install-prefix -d '<directory> = Specify install directory'
complete -c cmake -s Wdev -d '= Enable developer warnings.'
complete -c cmake -s Wno-dev -d '= Suppress developer warnings.'
complete -c cmake -s Wdeprecated -d '= Enable deprecation warnings.'
complete -c cmake -s Wno-deprecated -d '= Suppress deprecation warnings.'
complete -c cmake -l preset -d '<preset>,--preset=<preset>'
complete -c cmake -s E -d '= CMake command mode.'
complete -c cmake -l fresh -d '= Configure a fresh build tree, removing any'
complete -c cmake -l build -d '<dir>                = Build a CMake-generated project binary tree.'
complete -c cmake -l install -d '<dir>              = Install a CMake-generated project binary'
complete -c cmake -l open -d '<dir>                 = Open generated project in the associated'
complete -c cmake -s N -d '= View mode only.'
complete -c cmake -s P -d '<file>                    = Process script mode.'
complete -c cmake -l find-package -d '= Legacy pkg-config like mode.  Do not use.'
complete -c cmake -l system-information -d '[file]  = Dump information about this system.'
complete -c cmake -l log-context -d '= Prepend log messages with context, if given'
complete -c cmake -l debug-trycompile -d '= Do not delete the try_compile build tree.'
complete -c cmake -l debug-output -d '= Put cmake in a debug mode.'
complete -c cmake -l debug-find -d '= Put cmake find in a debug mode.'
complete -c cmake -l trace -d '= Put cmake in trace mode.'
complete -c cmake -l trace-expand -d '= Put cmake in trace mode with variable'
complete -c cmake -l warn-uninitialized -d 'Warn about uninitialized values.'
complete -c cmake -l no-warn-unused-cli -d "Don't warn about command line options."
complete -c cmake -l check-system-vars -d '= Find problems with variable usage in system'
complete -c cmake -l help -d '<keyword> [<file>]    = Print help for one keyword and exit.'
complete -c cmake -l help-full -d '[<file>]         = Print all help manuals and exit.'
complete -c cmake -l help-manual -d '<man> [<file>] = Print one help manual and exit.'
complete -c cmake -l help-manual-list -d '[<file>]  = List help manuals available and exit.'
complete -c cmake -l help-command -d '<cmd> [<file>]= Print help for one command and exit.'
complete -c cmake -l help-command-list -d '[<file>] = List commands with help available and exit.'
complete -c cmake -l help-commands -d '[<file>]     = Print cmake-commands manual and exit.'
complete -c cmake -l help-module -d '<mod> [<file>] = Print help for one module and exit.'
complete -c cmake -l help-module-list -d '[<file>]  = List modules with help available and exit.'
complete -c cmake -l help-modules -d '[<file>]      = Print cmake-modules manual and exit.'
complete -c cmake -l help-policy -d '<cmp> [<file>] = Print help for one policy and exit.'
complete -c cmake -l help-policy-list -d '[<file>]  = List policies with help available and exit.'
complete -c cmake -l help-policies -d '[<file>]     = Print cmake-policies manual and exit.'
complete -c cmake -l help-property -d '<prop> [<file>]'
complete -c cmake -l help-property-list -d '[<file>]= List properties with help available and'
complete -c cmake -l help-properties -d '[<file>]   = Print cmake-properties manual and exit.'
complete -c cmake -l help-variable -d 'var [<file>] = Print help for one variable and exit.'
complete -c cmake -l help-variable-list -d '[<file>]= List variables with help available and exit.'
complete -c cmake -l help-variables -d '[<file>]    = Print cmake-variables manual and exit.'
