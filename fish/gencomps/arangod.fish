complete -c arangod -l check-configuration -d '<boolean>                                       Check the configuration and exit.'
complete -c arangod -l config -d '<string>                                                     The configuration file or "none". (default: "")'
complete -c arangod -l configuration -d '<string>                                              The configuration file or "none". (default: "")'
complete -c arangod -l console -d '<boolean>                                                   Start the server with a JavaScript emergency console. (default: false)'
complete -c arangod -l daemon -d '<boolean>                                                    Start the server as a daemon (background process). Requires --pid-file to be set. (default: false)'
complete -c arangod -l default-language -d '<string>                                           An ISO-639 language code. You can only set this option once, when initializing the database. (default: "")'
complete -c arangod -l default-language-check -d '<boolean>                                    Check if `--icu-language` / `--default-language` matches the stored language. (default: true) (introduced in v3.'
complete -c arangod -l define -d '<string...>                                                  Define a value for a `@key@` entry in the configuration file using the syntax `"key=value"`. (default: )'
complete -c arangod -l dump-dependencies -d '<boolean>                                         Dump the dependency graph of the feature phases (internal) and exit.'
complete -c arangod -l dump-options -d '<boolean>                                              Dump all available startup options in JSON format and exit.'
complete -c arangod -l fortune -d '<boolean>                                                   Show a fortune cookie on startup. (default: false)'
complete -c arangod -l gid -d '<string>                                                        Switch to this group ID after reading configuration files. (default: "")'
complete -c arangod -l hund -d '<boolean>                                                      Make ArangoDB bark on startup. (default: false)'
complete -c arangod -l icu-language -d '<string>                                               An ICU locale ID to set a language and optionally additional properties that affect string comparisons and'
complete -c arangod -l log -d '<string...>                                                     Set the topic-specific log level, using `--log level` for the general topic or `--log topic=level` for the'
complete -c arangod -l pid-file -d '<string>                                                   The name of the process ID file to use if the server runs as a daemon. (default: "")'
complete -c arangod -l supervisor -d '<boolean>                                                Start the server in supervisor mode. Requires --pid-file to be set. (default: false)'
complete -c arangod -l uid -d '<string>                                                        Switch to this user ID after reading the configuration files. (default: "")'
complete -c arangod -n __fish_no_arguments -l version -d '<boolean>                                                   Print the version and other related information, then exit.'
complete -c arangod -l version-json -d '<boolean>                                              Print the version and other related information in JSON format, then exit. (introduced in v3.9.0)'
complete -c arangod -l working-directory -d '<string>                                          The working directory in daemon mode. (default: "/var/tmp")'
complete -c arangod -l agency.activate -d '<boolean>                                           Activate the Agency. (default: false)'
complete -c arangod -l agency.compaction-keep-size -d '<uint64>                                Keep as many Agency log entries before compaction point. (default: 50000)'
complete -c arangod -l agency.compaction-step-size -d '<uint64>                                The step size between state machine compactions. (default: 1000)'
complete -c arangod -l agency.disaster-recovery-id -d '<string>                                Specify the ID for this agent. WARNING: This is a dangerous option, for disaster recover only! (default: "")'
complete -c arangod -l agency.election-timeout-max -d '<double>                                The maximum timeout before an Agent calls for a new election (in seconds). (default: 5)'
complete -c arangod -l agency.election-timeout-min -d '<double>                                The minimum timeout before an Agent calls for a new election (in seconds). (default: 1)'
complete -c arangod -l agency.endpoint -d '<string...>                                         The Agency endpoints. (default: )'
complete -c arangod -l agency.max-append-size -d '<uint64>                                     The maximum size of appendEntries document (number of log entries). (default: 250)'
complete -c arangod -l agency.my-address -d '<string>                                          Which address to advertise to the outside. (default: "")'
complete -c arangod -l agency.pool-size -d '<uint64>                                           The number of Agents in the pool. (default: 1) (deprecated in v3.11.0)'
complete -c arangod -l agency.size -d '<uint64>                                                The number of Agents. (default: 1)'
complete -c arangod -l agency.supervision -d '<boolean>                                        Perform ArangoDB cluster supervision. (default: false)'
complete -c arangod -l agency.supervision-delay-add-follower -d '<uint64>                      The delay in supervision, before an AddFollower job is executed (in seconds). (default: 0) (introduced in v3.9.'
complete -c arangod -l agency.supervision-delay-failed-follower -d '<uint64>                   The delay in supervision, before a FailedFollower job is executed (in seconds). (default: 0) (introduced in v3.'
complete -c arangod -l agency.supervision-failed-leader-adds-follower -d '<boolean>            Flag indicating whether or not the FailedLeader job adds a new follower. (default: true) (introduced in v3.9.7,'
complete -c arangod -l agency.supervision-frequency -d '<double>                               The ArangoDB cluster supervision frequency (in seconds). (default: 1)'
complete -c arangod -l agency.supervision-grace-period -d '<double>                            The supervision time after which a server is considered to have failed (in seconds). (default: 10)'
complete -c arangod -l agency.supervision-ok-threshold -d '<double>                            The supervision time after which a server is considered to be bad (in seconds). (default: 5)'
complete -c arangod -l agency.wait-for-sync -d '<boolean>                                      Wait for hard disk syncs on every persistence call (required in production). (default: true)'
complete -c arangod -l arangosearch.commit-threads -d '<uint32>                                The upper limit to the allowed number of commit threads (0 = auto-detect). (default: 0) (introduced in v3.7.5)'
complete -c arangod -l arangosearch.commit-threads-idle -d '<uint32>                           The upper limit to the allowed number of idle threads to use for commit tasks (0 = auto-detect) (default: 0)'
complete -c arangod -l arangosearch.consolidation-threads -d '<uint32>                         The upper limit to the allowed number of consolidation threads (0 = auto-detect). (default: 0) (introduced in'
complete -c arangod -l arangosearch.consolidation-threads-idle -d '<uint32>                    The upper limit to the allowed number of idle threads to use for consolidation tasks (0 = auto-detect).'
complete -c arangod -l arangosearch.fail-queries-on-out-of-sync -d '<boolean>                  Whether retrieval queries on out-of-sync View links and inverted indexes should fail. (default: false)'
complete -c arangod -l arangosearch.skip-recovery -d '<string...>                              Skip the data recovery for the specified View link or inverted index on startup. The value for this option'
complete -c arangod -l arangosearch.threads -d '<uint32>                                       The exact number of threads to use for asynchronous tasks (0 = auto-detect). (default: 0) (deprecated in v3.7.5)'
complete -c arangod -l arangosearch.threads-limit -d '<uint32>                                 The upper limit to the auto-detected number of threads to use for asynchronous tasks (0 = use default).'
complete -c arangod -l cache.acceleration-factor-for-edge-compression -d '<uint32>             The acceleration factor for the LZ4 compression of in-memory edge cache entries. (default: 1) (introduced in v3.'
complete -c arangod -l cache.ideal-lower-fill-ratio -d '<double>                               The lower bound fill ratio value for a cache table. (default: 0.04) (introduced in v3.11.2)'
complete -c arangod -l cache.ideal-upper-fill-ratio -d '<double>                               The upper bound fill ratio value for a cache table. (default: 0.25) (introduced in v3.11.2)'
complete -c arangod -l cache.min-value-size-for-edge-compression -d '<size>                    The size threshold (in bytes) from which on payloads in the edge index cache transparently get LZ4-compressed.'
complete -c arangod -l cache.rebalancing-interval -d '<uint64>                                 The time between cache rebalancing attempts (in microseconds). The minimum value is 500000 (0.5 seconds).'
complete -c arangod -l cache.size -d '<uint64>                                                 The global size limit for all caches (in bytes). (default: 3758096384)'
complete -c arangod -l cluster.agency-endpoint -d '<string...>                                 Agency endpoint(s) to connect to. (default: )'
complete -c arangod -l cluster.api-jwt-policy -d '<string>                                     Controls the access permissions required for accessing /_admin/cluster REST APIs (jwt-all = JWT required to'
complete -c arangod -l cluster.create-waits-for-sync-replication -d '<boolean>                 Let the active Coordinator wait for all replicas to create collections. (default: true)'
complete -c arangod -l cluster.default-replication-factor -d '<uint32>                         The default replication factor for non-system collections. (default: 0) (introduced in v3.6.0)'
complete -c arangod -l cluster.failed-write-concern-status-code -d '<uint32>                   The HTTP status code to send if a shard has not enough in-sync replicas to fulfill the write concern.'
complete -c arangod -l cluster.force-one-shard -d '<boolean>                                   Force the OneShard mode for all new collections. (default: false) (introduced in v3.6.0)'
complete -c arangod -l cluster.index-create-timeout -d '<double>                               The amount of time (in seconds) the Coordinator waits for an index to be created before giving up. (default:'
complete -c arangod -l cluster.max-number-of-move-shards -d '<uint32>                          The number of shards to be moved per rebalance operation. If set to 0, no shards are moved. (default: 10)'
complete -c arangod -l cluster.max-number-of-shards -d '<uint32>                               The maximum number of shards that can be configured when creating new collections (0 = unrestricted). (default:'
complete -c arangod -l cluster.max-replication-factor -d '<uint32>                             The maximum replication factor for new collections (0 = unrestricted). (default: 10) (introduced in v3.6.0)'
complete -c arangod -l cluster.min-replication-factor -d '<uint32>                             The minimum replication factor for new collections. (default: 1) (introduced in v3.6.0)'
complete -c arangod -l cluster.my-address -d \<string\>\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ This\ server\'s\ endpoint\ for\ cluster-internal\ communication.\ \(default:\ \"\"\)
complete -c arangod -l cluster.my-advertised-endpoint -d \<string\>\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ This\ server\'s\ advertised\ endpoint\ for\ external\ communication\ \(optional,\ e.g.\ aan\ external\ IP\ address\ or\ load
complete -c arangod -l cluster.my-role -d \<string\>\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ This\ server\'s\ role.\ \(default:\ \"\"\)
complete -c arangod -l cluster.require-persisted-id -d '<boolean>                              If set to `true`, then the instance only starts if a UUID file is found in the database directory on startup.'
complete -c arangod -l cluster.resign-leadership-on-shutdown -d '<boolean>                     Create a resign leader ship job for this DB-Server on shutdown. (default: false)'
complete -c arangod -l cluster.shard-synchronization-attempt-timeout -d '<double>              The timeout (in seconds) for every shard synchronization attempt. Running into the timeout does not lead to a'
complete -c arangod -l cluster.synchronous-replication-timeout-factor -d '<double>             All synchronous replication timeouts are multiplied by this factor. (default: 1)'
complete -c arangod -l cluster.synchronous-replication-timeout-maximum -d '<double>            All synchronous replication timeouts are at most this value (in seconds). (default: 3600) (introduced in v3.8.0)'
complete -c arangod -l cluster.synchronous-replication-timeout-minimum -d '<double>            All synchronous replication timeouts are at least this value (in seconds). (default: 900) (introduced in v3.5.1)'
complete -c arangod -l cluster.synchronous-replication-timeout-per-4k -d '<double>             All synchronous replication timeouts are increased by this amount per 4096 bytes (in seconds). (default: 0.1)'
complete -c arangod -l cluster.system-replication-factor -d '<uint32>                          The default replication factor for system collections. (default: 2)'
complete -c arangod -l cluster.upgrade -d '<string>                                            Perform a cluster upgrade if necessary (auto = perform an upgrade and shut down only if `--database.'
complete -c arangod -l cluster.write-concern -d '<uint32>                                      The global default write concern used for writes to new collections. (default: 1) (introduced in v3.6.0)'
complete -c arangod -l database.auto-upgrade -d '<boolean>                                     Perform a database upgrade if necessary. (default: false)'
complete -c arangod -l database.check-version -d '<boolean>                                    Check the version of the database and exit.'
complete -c arangod -l database.directory -d '<string>                                         The path to the database directory. (default: "")'
complete -c arangod -l database.extended-names -d '<boolean>                                   Allow most UTF-8 characters in the names of databases, collections, Views, and indexes. Once in use, this'
complete -c arangod -l database.ignore-datafile-errors -d '<boolean>                           Load collections even if datafiles may contain errors. (default: false)'
complete -c arangod -l database.init-database -d '<boolean>                                    Initialize an empty database.'
complete -c arangod -l database.io-heartbeat -d '<boolean>                                     Perform I/O heartbeat to test the underlying volume. (default: true) (introduced in v3.8.7, v3.9.2)'
complete -c arangod -l database.max-databases -d '<size>                                       The maximum number of databases that can exist in parallel. (default: 18446744073709551615) (introduced in v3.'
complete -c arangod -l database.password -d '<string>                                          The initial password of the root user. (default: "")'
complete -c arangod -l database.required-directory-state -d '<string>                          The required state of the database directory at startup (non-existing: the database directory must not exist,'
complete -c arangod -l database.restore-admin -d '<boolean>                                    Reset the admin users and set a new password.'
complete -c arangod -l database.upgrade-check -d '<boolean>                                    Skip the database upgrade if set to false. (default: true)'
complete -c arangod -l database.wait-for-sync -d '<boolean>                                    The default waitForSync behavior. Can be overwritten when creating a collection. (default: false)'
complete -c arangod -l foxx.allow-install-from-remote -d '<boolean>                            Allow installing Foxx apps from remote URLs other than GitHub. (default: false) (introduced in v3.8.5)'
complete -c arangod -l foxx.api -d '<boolean>                                                  Whether to enable the Foxx management REST APIs. (default: true) (introduced in v3.5.0)'
complete -c arangod -l foxx.enable -d '<boolean>                                               Enable Foxx. (default: true) (introduced in v3.10.5)'
complete -c arangod -l foxx.force-update-on-startup -d '<boolean>                              Ensure that all Foxx services are synchronized before completing the startup sequence. (default: false)'
complete -c arangod -l foxx.queues -d '<boolean>                                               Enable or disable Foxx queues. (default: true)'
complete -c arangod -l foxx.queues-poll-interval -d '<double>                                  The poll interval for the Foxx queue manager (in seconds) (default: 1)'
complete -c arangod -l foxx.store -d '<boolean>                                                Whether to enable the Foxx store in the web interface. (default: true) (introduced in v3.5.0)'
complete -c arangod -l http.allow-method-override -d '<boolean>                                Allow HTTP method override using special headers. (default: false) (deprecated in v3.8.0)'
complete -c arangod -l http.hide-product-header -d '<boolean>                                  Whether to omit the `Server: ArangoDB` header in HTTP responses. (default: false) (deprecated in v3.8.0)'
complete -c arangod -l http.keep-alive-timeout -d '<double>                                    The keep-alive timeout for HTTP connections (in seconds). (default: 300)'
complete -c arangod -l http.permanently-redirect-root -d '<boolean>                            Whether to use a permanent or temporary redirect. (default: true) (introduced in v3.7.12)'
complete -c arangod -l http.redirect-root-to -d '<string>                                      Redirect of the root URL. (default: "/_admin/aardvark/index.html") (introduced in v3.7.12)'
complete -c arangod -l http.return-queue-time-header -d '<boolean>                             Whether to return the `x-arango-queue-time-seconds` header in all responses. (default: true) (introduced in v3.'
complete -c arangod -l http.trusted-origin -d '<string...>                                     The trusted origin URLs for CORS requests with credentials. (default: )'
complete -c arangod -l javascript.allow-admin-execute -d '<boolean>                            For testing purposes, allow `/_admin/execute`. Never enable this option in production! (default: false)'
complete -c arangod -l javascript.allow-external-process-control -d '<boolean>                 Allow the execution and control of external processes from within JavaScript actions. (default: false)'
complete -c arangod -l javascript.allow-port-testing -d '<boolean>                             Allow the testing of ports from within JavaScript actions. (default: false) (introduced in v3.5.0)'
complete -c arangod -l javascript.app-path -d '<string>                                        The directory for Foxx applications. (default: "")'
complete -c arangod -l javascript.copy-installation -d '<boolean>                              Copy the contents of `javascript.startup-directory` on first start. (default: false)'
complete -c arangod -l javascript.enabled -d '<boolean>                                        Enable the V8 JavaScript engine. (default: true)'
complete -c arangod -l javascript.endpoints-allowlist -d '<string...>                          Endpoints that can be connected to via the `@arangodb/request` module in JavaScript actions. (default: )'
complete -c arangod -l javascript.endpoints-denylist -d '<string...>                           Endpoints that cannot be connected to via the `@arangodb/request` module in JavaScript actions (if not in the'
complete -c arangod -l javascript.environment-variables-allowlist -d '<string...>              Environment variables that are accessible in JavaScript. (default: ) (introduced in v3.5.0)'
complete -c arangod -l javascript.environment-variables-denylist -d '<string...>               Environment variables that are inaccessible in JavaScript (if not in the allowlist). (default: ) (introduced in'
complete -c arangod -l javascript.files-allowlist -d '<string...>                              Filesystem paths that are accessible from within JavaScript actions. (default: ) (introduced in v3.5.0)'
complete -c arangod -l javascript.gc-frequency -d '<double>                                    Time-based garbage collection frequency for JavaScript objects (each x seconds). (default: 60)'
complete -c arangod -l javascript.gc-interval -d '<uint64>                                     Request-based garbage collection interval for JavaScript objects (each x requests). (default: 2000)'
complete -c arangod -l javascript.harden -d '<boolean>                                         Disable access to JavaScript functions in the internal module: getPid() and logLevel(). (default: false)'
complete -c arangod -l javascript.module-directory -d '<string...>                             Additional paths containing JavaScript modules. (default: )'
complete -c arangod -l javascript.script -d '<string...>                                       Run the script and exit. (default: )'
complete -c arangod -l javascript.script-parameter -d '<string...>                             Script parameter. (default: )'
complete -c arangod -l javascript.startup-directory -d '<string>                               A path to the directory containing the JavaScript startup scripts. (default: "")'
complete -c arangod -l javascript.startup-options-allowlist -d '<string...>                    Startup options whose names match this regular expression are allowed and exposed to JavaScript. (default: )'
complete -c arangod -l javascript.startup-options-denylist -d '<string...>                     Startup options whose names match this regular expression are not exposed (if not in the allowlist) to'
complete -c arangod -l javascript.tasks -d '<boolean>                                          Enable JavaScript tasks. (default: true) (introduced in v3.8.0)'
complete -c arangod -l javascript.transactions -d '<boolean>                                   Enable JavaScript transactions. (default: true) (introduced in v3.8.0)'
complete -c arangod -l javascript.user-defined-functions -d '<boolean>                         Enable JavaScript user-defined functions (UDFs) in AQL queries. (default: true) (introduced in v3.10.4)'
complete -c arangod -l javascript.v8-contexts -d '<uint64>                                     The maximum number of V8 contexts that are created for executing JavaScript actions. (default: 0)'
complete -c arangod -l javascript.v8-contexts-max-age -d '<double>                             The maximum age for each V8 context (in seconds) before it is disposed. (default: 60)'
complete -c arangod -l javascript.v8-contexts-max-invocations -d '<uint64>                     The maximum number of invocations for each V8 context before it is disposed (0 = unlimited). (default: 0)'
complete -c arangod -l javascript.v8-contexts-minimum -d '<uint64>                             The minimum number of V8 contexts to keep available for executing JavaScript actions. (default: 0)'
complete -c arangod -l javascript.v8-max-heap -d '<uint64>                                     The maximal heap size (in MiB). (default: 1024)'
complete -c arangod -l javascript.v8-options -d '<string...>                                   Options to pass to V8. (default: )'
complete -c arangod -l log.api-enabled -d '<string>                                            Whether the log API is enabled (true) or not (false), or only enabled for superuser JWT (jwt). (default:'
complete -c arangod -l log.color -d '<boolean>                                                 Use colors for TTY logging. (default: true)'
complete -c arangod -l log.escape-control-chars -d '<boolean>                                  Escape control characters in log messages. (default: true) (introduced in v3.9.0)'
complete -c arangod -l log.escape-unicode-chars -d '<boolean>                                  Escape Unicode characters in log messages. (default: false) (introduced in v3.9.0)'
complete -c arangod -l log.file -d \<string\>\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ shortcut\ for\ \'--log.output\ file://\<filename\>\'\ \(default:\ \"\"\)
complete -c arangod -l log.file-group -d '<string>                                             group to use for new log file, user must be a member of this group (default: "") (introduced in v3.4.5)'
complete -c arangod -l log.file-mode -d '<string>                                              mode to use for new log file, umask will be applied as well (default: "") (introduced in v3.4.5)'
complete -c arangod -l log.force-direct -d '<boolean>                                          Do not start a separate thread for logging. (default: false)'
complete -c arangod -l log.foreground-tty -d '<boolean>                                        Also log to TTY if backgrounded. (default: false)'
complete -c arangod -l log.hostname -d '<string>                                               The hostname to use in log message. Leave empty for none, use "auto" to automatically determine a hostname.'
complete -c arangod -l log.ids -d '<boolean>                                                   Log unique message IDs. (default: true) (introduced in v3.5.0)'
complete -c arangod -l log.in-memory -d '<boolean>                                             Use an in-memory log appender which can be queried via the API and web interface. (default: true) (introduced'
complete -c arangod -l log.in-memory-level -d '<string>                                        Use an in-memory log appender only for this log level and higher.'
complete -c arangod -l log.keep-logrotate -d '<boolean>                                        Keep the old log file after receiving a SIGHUP. (default: false)'
complete -c arangod -l log.level -d '<string...>                                               Set the topic-specific log level, using `--log.level level` for the general topic or `--log.level topic=level`'
complete -c arangod -l log.line-number -d '<boolean>                                           Include the function name, file name, and line number of the source code that issues the log message. Format:'
complete -c arangod -l log.max-entry-length -d '<uint32>                                       The maximum length of a log entry (in bytes). (default: 134217728) (introduced in v3.7.9)'
complete -c arangod -l log.output -d '<string...>                                              Log destination(s), e.g. file:///path/to/file (any occurrence of $PID is replaced with the process ID).'
complete -c arangod -l log.performance -d '<boolean>                                           Shortcut for `--log.level performance=trace`. (default: false) (deprecated in v3.5.0)'
complete -c arangod -l log.prefix -d '<string>                                                 Prefix log message with this string. (default: "")'
complete -c arangod -l log.process -d '<boolean>                                               Show the process identifier (PID) in log messages. (default: true) (introduced in v3.8.0)'
complete -c arangod -l log.request-parameters -d '<boolean>                                    include full URLs and HTTP request parameters in trace logs (default: true)'
complete -c arangod -l log.role -d '<boolean>                                                  Log the server role. (default: false)'
complete -c arangod -l log.shorten-filenames -d '<boolean>                                     shorten filenames in log output (use with --log.line-number) (default: true)'
complete -c arangod -l log.structured-param -d '<string...>                                    Toggle the usage of the log category parameter in structured log messages. (default: ) (introduced in v3.10.0)'
complete -c arangod -l log.thread -d '<boolean>                                                Show the thread identifier in log messages. (default: false)'
complete -c arangod -l log.thread-name -d '<boolean>                                           Show thread name in log messages. (default: false)'
complete -c arangod -l log.time-format -d '<string>                                            The time format to use in logs.'
complete -c arangod -l log.use-json-format -d '<boolean>                                       Use JSON as output format for logging. (default: false) (introduced in v3.8.0)'
complete -c arangod -l log.use-local-time -d '<boolean>                                        Use the local timezone instead of UTC. (default: false) (deprecated in v3.5.0)'
complete -c arangod -l log.use-microtime -d '<boolean>                                         Use Unix timestamps in seconds with microsecond precision. (default: false) (deprecated in v3.5.0)'
complete -c arangod -l network.idle-connection-ttl -d '<uint64>                                The default time-to-live of idle connections for cluster-internal communication (in milliseconds). (default:'
complete -c arangod -l network.io-threads -d '<uint32>                                         The number of network I/O threads for cluster-internal communication. (default: 2) (introduced in v3.6.0)'
complete -c arangod -l network.max-open-connections -d '<uint64>                               The maximum number of open TCP connections for cluster-internal communication per endpoint (default: 1024)'
complete -c arangod -l network.max-requests-in-flight -d '<uint64>                             The number of internal requests that can be in flight at a given point in time. (default: 65536) (introduced in'
complete -c arangod -l network.protocol -d '<string>                                           The network protocol to use for cluster-internal communication.'
complete -c arangod -l network.verify-hosts -d '<boolean>                                      Verify peer certificates when using TLS in cluster-internal communication. (default: false) (introduced in v3.6.'
complete -c arangod -l pregel.max-parallelism -d '<size>                                       The maximum parallelism usable in a Pregel job. (default: 8) (introduced in v3.10.0)'
complete -c arangod -l pregel.min-parallelism -d '<size>                                       The minimum parallelism usable in a Pregel job. (default: 1) (introduced in v3.10.0)'
complete -c arangod -l pregel.parallelism -d '<size>                                           The default parallelism to use in a Pregel job if none is specified. (default: 2) (introduced in v3.10.0)'
complete -c arangod -l query.allow-collections-in-expressions -d '<boolean>                    Allow full collections to be used in AQL expressions. (default: false) (introduced in v3.8.0) (deprecated in v3.'
complete -c arangod -l query.cache-entries -d '<uint64>                                        The maximum number of results in query result cache per database. (default: 128)'
complete -c arangod -l query.cache-entries-max-size -d '<uint64>                               The maximum cumulated size of results in the query result cache per database (in bytes). (default: 268435456)'
complete -c arangod -l query.cache-entry-max-size -d '<uint64>                                 The maximum size of an individual result entry in query result cache (in bytes). (default: 16777216)'
complete -c arangod -l query.cache-include-system-collections -d '<boolean>                    Whether to include system collection queries in the query result cache. (default: false)'
complete -c arangod -l query.cache-mode -d '<string>                                           The mode for the AQL query result cache. Can be "on", "off", or "demand". (default: "off")'
complete -c arangod -l query.fail-on-warning -d '<boolean>                                     Whether AQL queries should fail with errors even for recoverable warnings. (default: false)'
complete -c arangod -l query.global-memory-limit -d '<uint64>                                  The memory threshold for all AQL queries combined (in bytes, 0 = no limit). (default: 13915694039) (introduced'
complete -c arangod -l query.log-failed -d '<boolean>                                          Whether to log failed AQL queries. (default: false) (introduced in v3.9.5, v3.10.2)'
complete -c arangod -l query.log-memory-usage-threshold -d '<uint64>                           Log queries that have a peak memory usage larger than this threshold. (default: 4294967296) (introduced in v3.9.'
complete -c arangod -l query.max-artifact-log-length -d '<size>                                The maximum length of query strings and bind parameter values in logs before they get truncated. (default:'
complete -c arangod -l query.max-collections-per-query -d '<size>                              The maximum number of collections/shards that can be used in one AQL query. (default: 2048) (introduced in v3.'
complete -c arangod -l query.max-dnf-condition-members -d '<size>                              The maximum number of OR sub-nodes in the internal representation of an AQL FILTER condition. (default: 786432)'
complete -c arangod -l query.max-nodes-per-callstack -d '<uint64>                              The maximum number of execution nodes on the callstack before splitting the remaining nodes into a separate'
complete -c arangod -l query.max-runtime -d '<double>                                          The runtime threshold for AQL queries (in seconds, 0 = no limit). (default: 0) (introduced in v3.6.7, v3.7.3)'
complete -c arangod -l query.memory-limit -d '<uint64>                                         The memory threshold per AQL query (in bytes, 0 = no limit). (default: 10307921511)'
complete -c arangod -l query.memory-limit-override -d '<boolean>                               Allow increasing the per-query memory limits for individual queries. (default: true) (introduced in v3.8.0)'
complete -c arangod -l query.optimizer-max-plans -d '<uint64>                                  The maximum number of query plans to create for a query. (default: 128)'
complete -c arangod -l query.optimizer-rules -d '<string...>                                   Enable or disable specific optimizer rules by default. Specify the rule name prefixed with `-` for disabling,'
complete -c arangod -l query.registry-ttl -d '<double>                                         The default time-to-live of cursors and query snippets (in seconds). If set to 0 or lower, the value defaults'
complete -c arangod -l query.require-with -d '<boolean>                                        Whether AQL queries should require the `WITH collection-name` clause even on single servers (enable this to'
complete -c arangod -l query.slow-streaming-threshold -d '<double>                             The threshold for slow streaming AQL queries (in seconds). (default: 10)'
complete -c arangod -l query.slow-threshold -d '<double>                                       The threshold for slow AQL queries (in seconds). (default: 10)'
complete -c arangod -l query.tracking -d '<boolean>                                            Whether to track queries. (default: true)'
complete -c arangod -l query.tracking-slow-queries -d '<boolean>                               Whether to track slow queries. (default: true) (introduced in v3.7.4)'
complete -c arangod -l query.tracking-with-bindvars -d '<boolean>                              Whether to track bind variable of AQL queries. (default: true)'
complete -c arangod -l query.tracking-with-datasources -d '<boolean>                           Whether to track data sources of AQL queries. (default: false) (introduced in v3.7.4)'
complete -c arangod -l query.tracking-with-querystring -d '<boolean>                           Whether to track the query string. (default: true) (introduced in v3.7.4)'
complete -c arangod -l random.generator -d '<uint32>                                           The random number generator to use (1 = MERSENNE, 2 = RANDOM, 3 = URANDOM, 4 = COMBINED (not available on'
complete -c arangod -l replication.active-failover -d '<boolean>                               Enable active-failover during asynchronous replication. (default: false)'
complete -c arangod -l replication.active-failover-leader-grace-period -d '<double>            The amount of time (in seconds) for which the current leader will continue to assume its leadership even if it'
complete -c arangod -l replication.auto-repair-revision-trees -d '<boolean>                    Whether to automatically repair revision trees of shards after too many shard synchronization failures.'
complete -c arangod -l replication.auto-start -d '<boolean>                                    Enable or disable the automatic start of replication appliers. (default: true)'
complete -c arangod -l replication.connect-timeout -d '<double>                                The default timeout value for replication connection attempts (in seconds). (default: 10) (introduced in v3.4.9,'
complete -c arangod -l replication.max-parallel-tailing-invocations -d '<uint64>               The maximum number of concurrently allowed WAL tailing invocations (0 = unlimited). (default: 0) (introduced in'
complete -c arangod -l replication.quick-keys-limit -d \<uint64\>\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Limit\ at\ which\ \'quick\'\ calls\ to\ the\ replication\ keys\ API\ return\ only\ the\ document\ count\ for\ the\ second\ run.
complete -c arangod -l replication.request-timeout -d '<double>                                The default timeout value for replication requests (in seconds). (default: 600) (introduced in v3.4.9, v3.5.4)'
complete -c arangod -l replication.sync-by-revision -d '<boolean>                              Whether to use the newer revision-based replication protocol. (default: true) (introduced in v3.7.0)'
complete -c arangod -l rocksdb.allow-fallocate -d '<boolean>                                   Whether to allow RocksDB to use fallocate calls. If disabled, fallocate calls are bypassed and no'
complete -c arangod -l rocksdb.auto-fill-index-caches-on-startup -d '<boolean>                 Whether to automatically fill the in-memory index caches with entries from edge indexes and cache-enabled'
complete -c arangod -l rocksdb.auto-flush-check-interval -d '<double>                          The interval (in seconds) in which auto-flushes of WAL and column family data is executed. (default: 1800)'
complete -c arangod -l rocksdb.auto-flush-min-live-wal-files -d '<uint64>                      The minimum number of live WAL files that triggers an auto-flush of WAL and column family data. (default: 20)'
complete -c arangod -l rocksdb.auto-refill-index-caches-on-followers -d '<boolean>             Whether or not to automatically (re-)fill the in-memory index caches on followers as well. (default: true)'
complete -c arangod -l rocksdb.auto-refill-index-caches-on-modify -d '<boolean>                Whether to automatically (re-)fill the in-memory index caches with entries from edge indexes and cache-enabled'
complete -c arangod -l rocksdb.auto-refill-index-caches-queue-capacity -d '<size>              How many changes can be queued at most for automatically refilling the index caches. (default: 131072)'
complete -c arangod -l rocksdb.blob-compression-type -d '<string>                              The compression algorithm to use for blob data in the documents column family. Requires `--rocksdb.'
complete -c arangod -l rocksdb.blob-file-size -d '<uint64>                                     The size limit for blob files in the documents column family (in bytes). Requires `--rocksdb.enable-blob-files`.'
complete -c arangod -l rocksdb.blob-garbage-collection-age-cutoff -d '<double>                 The age cutoff for garbage collecting blob files in the documents column family (percentage value from 0 to 1'
complete -c arangod -l rocksdb.blob-garbage-collection-force-threshold -d '<double>            The garbage ratio threshold for scheduling targeted compactions for the oldest blob files in the documents'
complete -c arangod -l rocksdb.block-align-data-blocks -d '<boolean>                           If enabled, data blocks are aligned on the lesser of page size and block size. (default: false)'
complete -c arangod -l rocksdb.block-cache-jemalloc-allocator -d '<boolean>                    Use jemalloc-based memory allocator for RocksDB block cache. (experimental) (default: false) (introduced in v3.'
complete -c arangod -l rocksdb.block-cache-shard-bits -d '<int64>                              The number of shard bits to use for the block cache (-1 = default value). (default: -1)'
complete -c arangod -l rocksdb.block-cache-size -d '<uint64>                                   The size of block cache (in bytes). (default: 4509715660)'
complete -c arangod -l rocksdb.bloom-filter-bits-per-key -d '<double>                          The average number of bits to use per key in a Bloom filter. (default: 10) (introduced in v3.10.3)'
complete -c arangod -l rocksdb.cache-index-and-filter-blocks -d '<boolean>                     If enabled, the RocksDB block cache quota also includes RocksDB memtable sizes. (default: true) (introduced in'
complete -c arangod -l rocksdb.cache-index-and-filter-blocks-with-high-priority -d '<boolean   If enabled and `--rocksdb.cache-index-and-filter-blocks` is also enabled, cache index and filter blocks with'
complete -c arangod -l rocksdb.checksum-type -d '<string>                                      The checksum type to use for table files.'
complete -c arangod -l rocksdb.compaction-read-ahead-size -d '<uint64>                         If non-zero, bigger reads are performed when doing compaction. If you run RocksDB on spinning disks, you should'
complete -c arangod -l rocksdb.compaction-style -d \<string\>\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ The\ compaction\ style\ which\ is\ used\ to\ pick\ the\ next\ file\(s\)\ to\ be\ compacted\ \(note:\ all\ styles\ except\ \'level\'
complete -c arangod -l rocksdb.compression-type -d '<string>                                   The compression algorithm to use within RocksDB.'
complete -c arangod -l rocksdb.debug-logging -d '<boolean>                                     Whether to enable RocksDB debug logging. (default: false)'
complete -c arangod -l rocksdb.delayed-write-rate -d '<uint64>                                 Limit the write rate to the database (in bytes per second) when writing to the last mem-table allowed and if'
complete -c arangod -l rocksdb.dynamic-level-bytes -d '<boolean>                               Whether to determine the number of bytes for each level dynamically to minimize space amplification. (default:'
complete -c arangod -l rocksdb.edge-cache -d '<boolean>                                        Whether to use the in-memory cache for edges (default: true) (introduced in v3.6.4) (deprecated in v3.10.0)'
complete -c arangod -l rocksdb.enable-blob-files -d '<boolean>                                 Enable blob files for the documents column family. (experimental) (default: false) (introduced in v3.11.0)'
complete -c arangod -l rocksdb.enable-blob-garbage-collection -d '<boolean>                    Enable blob garbage collection during compaction in the documents column family. Requires `--rocksdb.'
complete -c arangod -l rocksdb.enable-index-compression -d '<boolean>                          Enable index compression. (default: true) (introduced in v3.10.0)'
complete -c arangod -l rocksdb.enable-pipelined-write -d '<boolean>                            If enabled, use a two stage write queue for WAL writes and memtable writes. (default: true)'
complete -c arangod -l rocksdb.enable-statistics -d '<boolean>                                 Whether RocksDB statistics should be enabled. (default: false)'
complete -c arangod -l rocksdb.enforce-block-cache-size-limit -d '<boolean>                    If enabled, strictly enforces the block cache size limit. (default: false)'
complete -c arangod -l rocksdb.exclusive-writes -d '<boolean>                                  If enabled, writes are exclusive. This allows the RocksDB engine to mimic the collection locking behavior of'
complete -c arangod -l rocksdb.format-version -d '<uint32>                                     The table format version to use inside RocksDB.'
complete -c arangod -l rocksdb.intermediate-commit-count -d '<uint64>                          An intermediate commit is performed automatically when this number of operations is reached in a transaction,'
complete -c arangod -l rocksdb.intermediate-commit-size -d '<uint64>                           An intermediate commit is performed automatically when a transaction has accumulated operations of this size'
complete -c arangod -l rocksdb.level0-compaction-trigger -d '<int64>                           The number of level-0 files that triggers a compaction. (default: 2)'
complete -c arangod -l rocksdb.level0-slowdown-trigger -d '<int64>                             The number of level-0 files that triggers a write slowdown (default: 16)'
complete -c arangod -l rocksdb.level0-stop-trigger -d '<int64>                                 The number of level-0 files that triggers a full write stop (default: 256)'
complete -c arangod -l rocksdb.limit-open-files-at-startup -d '<boolean>                       Limit the amount of .sst files RocksDB inspects at startup, in order to reduce the startup I/O operations.'
complete -c arangod -l rocksdb.max-background-jobs -d '<int32>                                 The maximum number of concurrent background jobs (compactions and flushes). (default: 8)'
complete -c arangod -l rocksdb.max-bytes-for-level-base -d '<uint64>                           If not using dynamic level sizes, this controls the maximum total data size for level-1 of the LSM tree.'
complete -c arangod -l rocksdb.max-bytes-for-level-multiplier -d '<double>                     If not using dynamic level sizes, the maximum number of bytes for level L of the LSM tree can be calculated as'
complete -c arangod -l rocksdb.max-concurrent-index-fill-tasks -d '<size>                      The maximum number of index fill tasks that can run concurrently on server startup. (default: 1) (introduced in'
complete -c arangod -l rocksdb.max-parallel-compactions -d '<uint64>                           The maximum number of parallel compactions jobs. (default: 2) (introduced in v3.7.11)'
complete -c arangod -l rocksdb.max-subcompactions -d '<uint32>                                 The maximum number of concurrent sub-jobs for a background compaction. (default: 2)'
complete -c arangod -l rocksdb.max-total-wal-size -d '<uint64>                                 The maximum total size of WAL files that force a flush of stale column families. (default: 83886080)'
complete -c arangod -l rocksdb.max-transaction-size -d '<uint64>                               The transaction size limit (in bytes). (default: 18446744073709551615)'
complete -c arangod -l rocksdb.max-write-buffer-number -d '<uint64>                            The maximum number of write buffers that build up in memory (default: number of column families + 2 = 9 write'
complete -c arangod -l rocksdb.max-write-buffer-number-definitions -d '<uint64>                If non-zero, overrides the value of `--rocksdb.max-write-buffer-number` for the definitions column family'
complete -c arangod -l rocksdb.max-write-buffer-number-documents -d '<uint64>                  If non-zero, overrides the value of `--rocksdb.max-write-buffer-number` for the documents column family'
complete -c arangod -l rocksdb.max-write-buffer-number-edge -d '<uint64>                       If non-zero, overrides the value of `--rocksdb.max-write-buffer-number` for the edge column family (default: 0)'
complete -c arangod -l rocksdb.max-write-buffer-number-fulltext -d '<uint64>                   If non-zero, overrides the value of `--rocksdb.max-write-buffer-number` for the fulltext column family'
complete -c arangod -l rocksdb.max-write-buffer-number-geo -d '<uint64>                        If non-zero, overrides the value of `--rocksdb.max-write-buffer-number` for the geo column family (default: 0)'
complete -c arangod -l rocksdb.max-write-buffer-number-primary -d '<uint64>                    If non-zero, overrides the value of `--rocksdb.max-write-buffer-number` for the primary column family (default:'
complete -c arangod -l rocksdb.max-write-buffer-number-replicated-logs -d '<uint64>            If non-zero, overrides the value of `--rocksdb.max-write-buffer-number` for the replicated-logs column family'
complete -c arangod -l rocksdb.max-write-buffer-number-vpack -d '<uint64>                      If non-zero, overrides the value of `--rocksdb.max-write-buffer-number` for the vpack column family (default:'
complete -c arangod -l rocksdb.max-write-buffer-size-to-maintain -d '<int64>                   The maximum size of immutable write buffers that build up in memory per column family. Larger values mean that'
complete -c arangod -l rocksdb.min-blob-size -d '<uint64>                                      The size threshold for storing documents in blob files (in bytes, 0 = store all documents in blob files).'
complete -c arangod -l rocksdb.min-write-buffer-number-to-merge -d '<uint64>                   The minimum number of write buffers that are merged together before writing to storage. (default: 1)'
complete -c arangod -l rocksdb.minimum-disk-free-bytes -d '<uint64>                            The minimum number of free disk bytes for considering the server healthy in health checks (0 = disable the'
complete -c arangod -l rocksdb.minimum-disk-free-percent -d '<double>                          The minimum percentage of free disk space for considering the server healthy in health checks (0 = disable the'
complete -c arangod -l rocksdb.num-levels -d '<uint64>                                         The number of levels for the database in the LSM tree. (default: 7)'
complete -c arangod -l rocksdb.num-threads-priority-high -d '<uint32>                          The number of threads for high priority operations (e.g. flush). (default: 0) (introduced in v3.8.5)'
complete -c arangod -l rocksdb.num-threads-priority-low -d '<uint32>                           The number of threads for low priority operations (e.g. compaction). (default: 0)'
complete -c arangod -l rocksdb.num-uncompressed-levels -d '<uint64>                            The number of levels that do not use compression in the LSM tree. (default: 2)'
complete -c arangod -l rocksdb.optimize-filters-for-hits -d '<boolean>                         Whether the implementation should optimize the filters mainly for cases where keys are found rather than also'
complete -c arangod -l rocksdb.partition-files-for-documents -d '<boolean>                     If enabled, the document data for different collections/shards will end up in different .sst files.'
complete -c arangod -l rocksdb.partition-files-for-edge-index -d '<boolean>                    If enabled, the index data for different edge indexes will end up in different .sst files. (experimental)'
complete -c arangod -l rocksdb.partition-files-for-persistent-index -d '<boolean>              If enabled, the index data for different persistent indexes will end up in different .sst files. (experimental)'
complete -c arangod -l rocksdb.partition-files-for-primary-index -d '<boolean>                 If enabled, the primary index data for different collections/shards will end up in different .sst files.'
complete -c arangod -l rocksdb.pending-compactions-slowdown-trigger -d '<uint64>               The number of pending compaction bytes that triggers a write slowdown. (default: 131072) (introduced in v3.8.5)'
complete -c arangod -l rocksdb.pending-compactions-stop-trigger -d '<uint64>                   The number of pending compaction bytes that triggers a full write stop. (default: 17179869184) (introduced in'
complete -c arangod -l rocksdb.periodic-compaction-ttl -d '<uint64>                            Time-to-live (in seconds) for periodic compaction of .sst files, based on the file age (0 = no periodic'
complete -c arangod -l rocksdb.pin-l0-filter-and-index-blocks-in-cache -d '<boolean>           If enabled and `--rocksdb.cache-index-and-filter-blocks` is also enabled, filter and index blocks are pinned'
complete -c arangod -l rocksdb.pin-top-level-index-and-filter -d '<boolean>                    If enabled and `--rocksdb.cache-index-and-filter-blocks` is also enabled, the top-level index of partitioned'
complete -c arangod -l rocksdb.prepopulate-block-cache -d '<boolean>                           Pre-populate block cache on flushes. (default: false) (introduced in v3.10.0)'
complete -c arangod -l rocksdb.recycle-log-file-num -d '<boolean>                              If enabled, keep a pool of log files around for recycling. (default: false)'
complete -c arangod -l rocksdb.reserve-file-metadata-memory -d '<boolean>                      account for .sst file metadata memory in block cache (default: false) (introduced in v3.11.0)'
complete -c arangod -l rocksdb.reserve-table-builder-memory -d '<boolean>                      Account for table building memory in block cache. (default: false) (introduced in v3.10.0)'
complete -c arangod -l rocksdb.reserve-table-reader-memory -d '<boolean>                       Account for table reader memory in block cache. (default: false) (introduced in v3.10.0)'
complete -c arangod -l rocksdb.sync-delay-threshold -d '<uint64>                               The threshold for self-observation of WAL disk syncs (in milliseconds, 0 = no warnings). Any WAL disk sync'
complete -c arangod -l rocksdb.sync-interval -d '<uint64>                                      The interval for automatic, non-requested disk syncs (in milliseconds, 0 = turn automatic syncing off)'
complete -c arangod -l rocksdb.table-block-size -d '<uint64>                                   The approximate size (in bytes) of the user data packed per block for uncompressed data. (default: 16384)'
complete -c arangod -l rocksdb.target-file-size-base -d '<uint64>                              Per-file target file size for compaction (in bytes). The actual target file size for each level is `--rocksdb.'
complete -c arangod -l rocksdb.target-file-size-multiplier -d '<uint64>                        The multiplier for `--rocksdb.target-file-size`. A value of 1 means that files in different levels will have'
complete -c arangod -l rocksdb.throttle -d '<boolean>                                          Enable write-throttling. (default: true)'
complete -c arangod -l rocksdb.throttle-frequency -d '<uint64>                                 The frequency for write-throttle calculations (in milliseconds). (default: 1000) (introduced in v3.8.5)'
complete -c arangod -l rocksdb.throttle-lower-bound-bps -d \<uint64\>\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ The\ lower\ bound\ for\ throttle\'s\ write\ bandwidth\ \(in\ bytes\ per\ second\).\ \(default:\ 10485760\)\ \(introduced\ in\ v3.8.5\)
complete -c arangod -l rocksdb.throttle-max-write-rate -d '<uint64>                            The maximum write rate enforced by throttle (in bytes per second, 0 = unlimited). (default: 0) (introduced in'
complete -c arangod -l rocksdb.throttle-scaling-factor -d '<uint64>                            The adaptiveness scaling factor for write-throttle calculations. (default: 17) (introduced in v3.8.5)'
complete -c arangod -l rocksdb.throttle-slots -d '<uint64>                                     The number of historic metrics to use for throttle value calculation. (default: 120) (introduced in v3.8.5)'
complete -c arangod -l rocksdb.throttle-slow-down-writes-trigger -d '<uint64>                  The number of level 0 files whose payload is not considered in throttle calculations when penalizing the'
complete -c arangod -l rocksdb.total-write-buffer-size -d '<uint64>                            The maximum total size of in-memory write buffers (0 = unbounded). (default: 6012954214)'
complete -c arangod -l rocksdb.transaction-lock-stripes -d '<uint64>                           The number of lock stripes to use for transaction locks. (default: 16) (introduced in v3.9.2)'
complete -c arangod -l rocksdb.transaction-lock-timeout -d '<int64>                            If positive, specifies the wait timeout in milliseconds when  a transaction attempts to lock a document. A'
complete -c arangod -l rocksdb.use-file-logging -d \<boolean\>\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Use\ a\ file-base\ logger\ for\ RocksDB\'s\ own\ logs.\ \(default:\ false\)
complete -c arangod -l rocksdb.use-fsync -d '<boolean>                                         Whether to use fsync calls when writing to disk (set to false for issuing fdatasync calls only). (default:'
complete -c arangod -l rocksdb.use-range-delete-in-wal -d '<boolean>                           Enable range delete markers in the write-ahead log (WAL). Potentially incompatible with older arangosync'
complete -c arangod -l rocksdb.verify-sst -d '<boolean>                                        Verify the validity of .sst files present in the `engine-rocksdb` directory on startup. (introduced in v3.11.0)'
complete -c arangod -l rocksdb.wal-archive-size-limit -d '<uint64>                             The maximum total size (in bytes) of archived WAL files to keep on the leader (0 = unlimited). (default: 0)'
complete -c arangod -l rocksdb.wal-directory -d '<string>                                      Absolute path for RocksDB WAL files. If not set, a subdirectory `journals` inside the database directory is'
complete -c arangod -l rocksdb.wal-file-timeout -d '<double>                                   The timeout after which unused WAL files are deleted (in seconds). (default: 10)'
complete -c arangod -l rocksdb.wal-file-timeout-initial -d '<double>                           The initial timeout (in seconds) after which unused WAL files deletion kicks in after server start. (default:'
complete -c arangod -l rocksdb.wal-recovery-skip-corrupted -d '<boolean>                       Skip corrupted records in WAL recovery. (default: false)'
complete -c arangod -l rocksdb.write-buffer-size -d '<uint64>                                  The amount of data to build up in memory before converting to a sorted on-disk file (0 = disabled). (default:'
complete -c arangod -l server.allow-use-database -d '<boolean>                                 Allow to change the database in REST actions. Only needed internally for unit tests. (default: false)'
complete -c arangod -l server.authentication -d '<boolean>                                     Whether to use authentication for all client requests. (default: true)'
complete -c arangod -l server.authentication-system-only -d '<boolean>                         Use HTTP authentication only for requests to /_api and /_admin endpoints. (default: true)'
complete -c arangod -l server.authentication-timeout -d '<double>                              The timeout for the authentication cache (in seconds, 0 = indefinitely). (default: 0)'
complete -c arangod -l server.authentication-unix-sockets -d '<boolean>                        Whether to use authentication for requests via UNIX domain sockets. (default: true)'
complete -c arangod -l server.cluster-metrics-timeout -d '<uint32>                             Cluster metrics polling timeout (in seconds). (default: 0) (introduced in v3.10.0)'
complete -c arangod -l server.count-descriptors-interval -d '<uint64>                          Controls the interval (in milliseconds) in which the number of open file descriptors for the process is'
complete -c arangod -l server.descriptors-minimum -d '<uint64>                                 The minimum number of file descriptors needed to start (0 = no minimum) (default: 8192)'
complete -c arangod -l server.early-connections -d '<boolean>                                  Allow requests to a limited set of APIs early during the server startup. (default: false) (introduced in v3.10.'
complete -c arangod -l server.endpoint -d '<string...>                                         Endpoint for client requests (e.g. `http+tcp://127.0.0.1:8529`, or `vst+ssl://192.168.1.1:8529`) (default: )'
complete -c arangod -l server.ensure-whitespace-metrics-format -d '<boolean>                   Set to `true` to ensure whitespace between the exported metric value and the preceding token (metric name or'
complete -c arangod -l server.export-metrics-api -d '<boolean>                                 Whether to enable the metrics API. (default: true) (introduced in v3.6.0)'
complete -c arangod -l server.export-read-write-metrics -d '<boolean>                          Whether to enable metrics for document reads and writes. (default: false) (introduced in v3.7.7)'
complete -c arangod -l server.gid -d '<string>                                                 Switch to this group ID after reading configuration files. (default: "")'
complete -c arangod -l server.harden -d '<boolean>                                             Lock down REST APIs that reveal version information or server internals for non-admin users. (default: false)'
complete -c arangod -l server.io-threads -d '<uint64>                                          The number of threads used to handle I/O. (default: 2)'
complete -c arangod -l server.jwt-secret -d '<string>                                          The secret to use when doing JWT authentication. (default: "") (deprecated in v3.3.22, v3.4.2)'
complete -c arangod -l server.jwt-secret-folder -d '<string>                                   A folder containing one or more JWT secret files to use for JWT authentication. (default: "") (introduced in v3.'
complete -c arangod -l server.jwt-secret-keyfile -d '<string>                                  A file containing the JWT secret to use when doing JWT authentication. (default: "")'
complete -c arangod -l server.local-authentication -d \<boolean\>\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Whether\ to\ use\ ArangoDB\'s\ built-in\ authentication\ system.\ \(default:\ true\)
complete -c arangod -l server.maintenance-actions-block -d '<int32>                            The minimum number of seconds finished actions block duplicates. (default: 2)'
complete -c arangod -l server.maintenance-actions-linger -d '<int32>                           The minimum number of seconds finished actions remain in the deque. (default: 3600)'
complete -c arangod -l server.maintenance-slow-threads -d '<uint32>                            The maximum number of threads available for slow maintenance actions (long SynchronizeShard and long'
complete -c arangod -l server.maintenance-threads -d '<uint32>                                 The maximum number of threads available for maintenance actions. (default: 3)'
complete -c arangod -l server.maximal-queue-size -d '<uint64>                                  The size of the priority 3 FIFO. (default: 4096)'
complete -c arangod -l server.maximal-threads -d '<uint64>                                     The maximum number of request handling threads to run (0 = use system-specific default of 32) (default: 0)'
complete -c arangod -l server.minimal-threads -d '<uint64>                                     The minimum number of request handling threads to run. (default: 4)'
complete -c arangod -l server.ongoing-low-priority-multiplier -d '<double>                     Controls the number of low priority requests that can be ongoing at a given point in time, relative to the'
complete -c arangod -l server.prio1-size -d '<uint64>                                          The size of the priority 1 FIFO. (default: 4096)'
complete -c arangod -l server.prio2-size -d '<uint64>                                          The size of the priority 2 FIFO. (default: 4096) (introduced in v3.8.0)'
complete -c arangod -l server.rest-server -d '<boolean>                                        Start a REST server. (default: true)'
complete -c arangod -l server.scheduler-queue-size -d '<uint64>                                The number of simultaneously queued requests inside the scheduler. (default: 4096)'
complete -c arangod -l server.session-timeout -d '<double>                                     The lifetime for tokens (in seconds) that can be obtained from the `POST /_open/auth` endpoint. Used by the web'
complete -c arangod -l server.statistics -d '<boolean>                                         Whether to enable statistics gathering and statistics APIs. (default: true)'
complete -c arangod -l server.statistics-all-databases -d '<boolean>                           Provide cluster statistics in the web interface for all databases. (default: true) (introduced in v3.8.0)'
complete -c arangod -l server.statistics-history -d '<boolean>                                 Whether to store statistics in the database. (default: true) (introduced in v3.4.9, v3.5.1)'
complete -c arangod -l server.storage-engine -d '<string>                                      The storage engine type (note that the MMFiles engine is unavailable since v3.7.0 and cannot be used anymore).'
complete -c arangod -l server.support-info-api -d '<string>                                    The policy for exposing the support info and also the telemetrics API.'
complete -c arangod -l server.telemetrics-api -d '<boolean>                                    Whether to enable the telemetrics API. (default: true) (introduced in v3.11.0)'
complete -c arangod -l server.telemetrics-api-max-requests -d '<uint64>                        The maximum number of requests from arangosh that the telemetrics API responds to without rate-limiting.'
complete -c arangod -l server.uid -d '<string>                                                 Switch to this user ID after reading configuration files. (default: "")'
complete -c arangod -l server.unavailability-queue-fill-grade -d '<double>                     The queue fill grade from which onwards the server is considered unavailable because of an overload (ratio, 0 ='
complete -c arangod -l server.validate-utf8-strings -d '<boolean>                              Perform UTF-8 string validation for incoming JSON and VelocyPack data. (default: true) (introduced in v3.7.0)'
complete -c arangod -l ssl.cafile -d '<string>                                                 The CA file used for secure connections. (default: "")'
complete -c arangod -l ssl.cipher-list -d '<string>                                            The SSL ciphers to use. See the OpenSSL documentation. (default: "HIGH:!EXPORT:!aNULL@STRENGTH")'
complete -c arangod -l ssl.ecdh-curve -d '<string>                                             The SSL ECDH curve, see the output of "openssl ecparam -list_curves". (default: "prime256v1")'
complete -c arangod -l ssl.keyfile -d '<string>                                                The keyfile used for secure connections. (default: "")'
complete -c arangod -l ssl.options -d '<uint64>                                                The SSL connection options. See the OpenSSL documentation. (default: 2147485776)'
complete -c arangod -l ssl.prefer-http1-in-alpn -d '<boolean>                                  Allows to let the server prefer HTTP/1.1 over HTTP/2 in ALPN protocol negotiations (default: false)'
complete -c arangod -l ssl.protocol -d '<uint64>                                               The SSL protocol (1 = SSLv2 (unsupported), 2 = SSLv2 or SSLv3 (negotiated), 3 = SSLv3, 4 = TLSv1, 5 = TLSv1.2,'
complete -c arangod -l ssl.session-cache -d '<boolean>                                         Enable the session cache for connections. (default: false)'
complete -c arangod -l tcp.backlog-size -d '<uint64>                                           Specify the size of the backlog for the `listen` system call. (default: 64)'
complete -c arangod -l tcp.reuse-address -d '<boolean>                                         Try to reuse TCP port(s). (default: true)'
complete -c arangod -l temp.intermediate-results-capacity -d '<uint64>                         The maximum capacity (in bytes) to use for ephemeral, intermediate results on disk (0 = unlimited).'
complete -c arangod -l temp.intermediate-results-path -d '<string>                             The path for storing ephemeral, intermediate results on disk (empty = not used). (experimental) (default: "")'
complete -c arangod -l temp.intermediate-results-spillover-threshold-memory-usage -d '<size>   The memory usage threshold (in bytes) after which a spillover from RAM to disk happens for intermediate results'
complete -c arangod -l temp.intermediate-results-spillover-threshold-num-rows -d '<size>       The number of result rows after which a spillover from RAM to disk happens for intermediate results (threshold'
complete -c arangod -l temp.path -d '<string>                                                  The path for temporary files. (default: "")'
complete -c arangod -l transaction.streaming-idle-timeout -d '<double>                         The idle timeout (in seconds) for Stream Transactions. (default: 60) (introduced in v3.8.0)'
complete -c arangod -l transaction.streaming-lock-timeout -d '<double>                         The lock timeout (in seconds) in case of parallel access to the same Stream Transaction. (default: 8)'
complete -c arangod -l ttl.frequency -d '<uint64>                                              The frequency (in milliseconds) for the TTL background thread invocation (0 = turn the TTL background thread'
complete -c arangod -l ttl.max-collection-removes -d '<uint64>                                 The maximum number of documents to remove per collection in each invocation of the TTL thread. (default:'
complete -c arangod -l ttl.max-total-removes -d '<uint64>                                      The maximum number of documents to remove per invocation of the TTL thread. (default: 1000000)'
complete -c arangod -l web-interface.proxy-request-check -d '<boolean>                         Enable proxy request checking. (default: true)'
complete -c arangod -l web-interface.trusted-proxy -d '<string...>                             The list of proxies to trust (can be IP or network). Make sure `--web-interface.proxy-request-check` is enabled.'
complete -c arangod -l web-interface.version-check -d '<boolean>                               Alert the user if new versions are available. (default: true)'
