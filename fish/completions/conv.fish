complete -f -c conv -n __fish_use_subcommand -a dev -d '[options]                        Develop against a dev deployment,'
complete -c conv -n '__fish_seen_subcommand_from dev' -s v -l verbose -d 'Show full listing of changes'
complete -c conv -n '__fish_seen_subcommand_from dev' -l typecheck -d '<mode>        Check TypeScript files with `tsc --noEmit`.'
complete -c conv -n '__fish_seen_subcommand_from dev' -l codegen -d '<mode>          Regenerate code in `convex/_generated/` (choices:'
complete -c conv -n '__fish_seen_subcommand_from dev' -l configure -d '[choice]      Ignore existing configuration and configure new or'
complete -c conv -n '__fish_seen_subcommand_from dev' -l team -d "<team_slug>        The team you'd like to use for this project>"
complete -c conv -n '__fish_seen_subcommand_from dev' -l project -d "<project_slug>  The name of the project you'd like to configure>"
complete -c conv -n '__fish_seen_subcommand_from dev' -l once -d 'Execute only the first 3 steps, stop on any failure'
complete -c conv -n '__fish_seen_subcommand_from dev' -l until-success -d 'Execute only the first 3 steps, on failure watch'
complete -c conv -n '__fish_seen_subcommand_from dev' -l run -d '<functionName>      The identifier of the function to run in step 3,'
complete -c conv -n '__fish_seen_subcommand_from dev' -l tail-logs -d "Tail this project's Convex logs in this terminal."
complete -c conv -n '__fish_seen_subcommand_from dev' -s h -l help -d 'display help for command'
complete -f -c conv -n __fish_use_subcommand -a watching -d 'for changes'
complete -f -c conv -n __fish_use_subcommand -a deploy -d '[options]                     Deploy to your prod deployment'
complete -c conv -n '__fish_seen_subcommand_from deploy' -s v -l verbose -d 'Show full listing of changes'
complete -c conv -n '__fish_seen_subcommand_from deploy' -l dry-run -d 'Print out the generated configuration without'
complete -c conv -n '__fish_seen_subcommand_from deploy' -s y -l yes -d 'Skip confirmation prompt when running locally'
complete -c conv -n '__fish_seen_subcommand_from deploy' -l typecheck -d '<mode>             Whether to check TypeScript files with `tsc'
complete -c conv -n '__fish_seen_subcommand_from deploy' -l codegen -d '<mode>               Whether to regenerate code in'
complete -c conv -n '__fish_seen_subcommand_from deploy' -l cmd -d '<command>                Command to run as part of deploying your app'
complete -c conv -n '__fish_seen_subcommand_from deploy' -l cmd-url-env-var-name -d '<name>  Environment variable name to set Convex'
complete -c conv -n '__fish_seen_subcommand_from deploy' -l preview-run -d '<functionName>   Function to run if deploying to a preview'
complete -c conv -n '__fish_seen_subcommand_from deploy' -l preview-create -d '<name>        The name to associate with this deployment if'
complete -c conv -n '__fish_seen_subcommand_from deploy' -s h -l help -d 'display help for command'
complete -f -c conv -n __fish_use_subcommand -a run -d '[options] <functionName> [args]  Run a function (query, mutation, or'
complete -c conv -n '__fish_seen_subcommand_from run' -s w -l watch -d 'Watch a query, printing its result if the'
complete -c conv -n '__fish_seen_subcommand_from run' -l push -d 'Push code to deployment before running'
complete -c conv -n '__fish_seen_subcommand_from run' -l prod '-d Run the function on this project\'s'
complete -c conv -n '__fish_seen_subcommand_from run' -l preview-name -d '<previewName>        Run the function on the preview'
complete -c conv -n '__fish_seen_subcommand_from run' -l deployment-name -d '<deploymentName>  Run the function on the specified'
complete -c conv -n '__fish_seen_subcommand_from run' -l typecheck -d '<mode>                  Whether to check TypeScript files with'
complete -c conv -n '__fish_seen_subcommand_from run' -l codegen -d '<mode>                    Regenerate code in `convex/_generated/`'
complete -c conv -n '__fish_seen_subcommand_from run' -s h -l help -d 'display help for command'
