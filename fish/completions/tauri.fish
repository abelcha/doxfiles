complete -f -c tauri -n __fish_use_subcommand -a init -d 'Initialize a Tauri project in an existing directory'
complete -c tauri -n '__fish_seen_subcommand_from init' -s d -l directory -d '<DIRECTORY>'
complete -c tauri -n '__fish_seen_subcommand_from init' -s t -l tauri-path -d '<TAURI_PATH>'
complete -c tauri -n '__fish_seen_subcommand_from init' -s A -l app-name -d '<APP_NAME>'
complete -c tauri -n '__fish_seen_subcommand_from init' -s W -l window-title -d '<WINDOW_TITLE>'
complete -c tauri -n '__fish_seen_subcommand_from init' -s D -l frontend-dist -d '<FRONTEND_DIST>'
complete -c tauri -n '__fish_seen_subcommand_from init' -s P -l dev-url -d '<DEV_URL>'
complete -c tauri -n '__fish_seen_subcommand_from init' -l before-dev-command -d '<BEFORE_DEV_COMMAND>'
complete -c tauri -n '__fish_seen_subcommand_from init' -l before-build-command -d '<BEFORE_BUILD_COMMAND>'
complete -f -c tauri -n __fish_use_subcommand -a dev -d 'Run your app in development mode'
complete -c tauri -n '__fish_seen_subcommand_from dev' -s r -l runner -d '<RUNNER>'
complete -c tauri -n '__fish_seen_subcommand_from dev' -s t -l target -d '<TARGET>'
complete -c tauri -n '__fish_seen_subcommand_from dev' -s f -l features -d '[<FEATURES>...]'
complete -c tauri -n '__fish_seen_subcommand_from dev' -s c -l config -d '<CONFIG>'
complete -c tauri -n '__fish_seen_subcommand_from dev' -l port -d '<PORT>'
complete -f -c tauri -n __fish_use_subcommand -a build -d 'Build your app in release mode and generate bundles and installers'
complete -c tauri -n '__fish_seen_subcommand_from build' -s r -l runner -d '<RUNNER>'
complete -c tauri -n '__fish_seen_subcommand_from build' -s t -l target -d '<TARGET>'
complete -c tauri -n '__fish_seen_subcommand_from build' -s f -l features -d '[<FEATURES>...]'
complete -c tauri -n '__fish_seen_subcommand_from build' -s b -l bundles -d '[<BUNDLES>...]'
complete -c tauri -n '__fish_seen_subcommand_from build' -s c -l config -d '<CONFIG>'
complete -f -c tauri -n __fish_use_subcommand -a bundle -d 'Generate bundles and installers for your app (already built by `tauri build`)'
complete -c tauri -n '__fish_seen_subcommand_from bundle' -s b -l bundles -d '[<BUNDLES>...]'
complete -c tauri -n '__fish_seen_subcommand_from bundle' -s c -l config -d '<CONFIG>'
complete -c tauri -n '__fish_seen_subcommand_from bundle' -s f -l features -d '[<FEATURES>...]'
complete -c tauri -n '__fish_seen_subcommand_from bundle' -s t -l target -d '<TARGET>'
complete -f -c tauri -n __fish_use_subcommand -a migrate -d 'Migrate from v1 to v2'
complete -c tauri -n '__fish_seen_subcommand_from migrate' -s h -l help -d 'Print help'
complete -c tauri -n __fish_no_arguments -s V -l version -d 'Print version'
complete -f -c tauri -n __fish_use_subcommand -a info -d 'Show a concise list of information about the environment, Rust, Node.js and their versions as well as a few relevant project configurations'
complete -c tauri -n '__fish_seen_subcommand_from info' -l interactive -d 'Interactive mode to apply automatic fixes'
complete -c tauri -n '__fish_seen_subcommand_from info' -s h -l help -d 'Print help'
complete -c tauri -n __fish_no_arguments -s V -l version -d 'Print version'
complete -f -c tauri -n __fish_use_subcommand -a add -d 'Add a tauri plugin to the project'
complete -c tauri -n '__fish_seen_subcommand_from add' -s t -l tag -d '<TAG>        Git tag to use'
complete -c tauri -n '__fish_seen_subcommand_from add' -s r -l rev -d '<REV>        Git rev to use'
complete -c tauri -n '__fish_seen_subcommand_from add' -s b -l branch -d '<BRANCH>  Git branch to use'
complete -c tauri -n '__fish_seen_subcommand_from add' -l no-fmt -d "Don't format code with rustfmt"
complete -c tauri -n '__fish_seen_subcommand_from add' -s h -l help -d 'Print help'
complete -c tauri -n __fish_no_arguments -s V -l version -d 'Print version'
complete -f -c tauri -n __fish_use_subcommand -a remove -d 'Remove a tauri plugin from the project'
complete -c tauri -n '__fish_seen_subcommand_from remove' -s h -l help -d 'Print help'
complete -c tauri -n __fish_no_arguments -s V -l version -d 'Print version'
complete -f -c tauri -n __fish_use_subcommand -a plugin -d 'Manage or create Tauri plugins'
complete -c tauri -n '__fish_seen_subcommand_from plugin' -s h -l help -d 'Print help'
complete -c tauri -n __fish_no_arguments -s V -l version -d 'Print version'
complete -f -c tauri -n __fish_use_subcommand -a icon -d 'Generate various icons for all major platforms'
complete -c tauri -n '__fish_seen_subcommand_from icon' -s o -l output -d "<OUTPUT>        Output directory. Default: 'icons' directory next to the tauri.conf.json file"
complete -c tauri -n '__fish_seen_subcommand_from icon' -s p -l png -d '<PNG>              Custom PNG icon sizes to generate. When set, the default icons are not generated'
complete -c tauri -n '__fish_seen_subcommand_from icon' -l ios-color -d "<IOS_COLOR>  The background color of the iOS icon - string as defined in the W3C's CSS Color Module Level 4 <https://www.w3.org/TR/css-color-4/> [default: #fff]"
complete -c tauri -n '__fish_seen_subcommand_from icon' -s h -l help -d 'Print help'
complete -c tauri -n __fish_no_arguments -s V -l version -d 'Print version'
complete -f -c tauri -n __fish_use_subcommand -a signer -d 'Generate signing keys for Tauri updater or sign files'
complete -c tauri -n '__fish_seen_subcommand_from signer' -s h -l help -d 'Print help'
complete -c tauri -n __fish_no_arguments -s V -l version -d 'Print version'
complete -f -c tauri -n __fish_use_subcommand -a completions -d 'Generate Tauri CLI shell completions for Bash, Zsh, PowerShell or Fish'
complete -c tauri -n '__fish_seen_subcommand_from completions' -s s -l shell -d '<SHELL>    Shell to generate a completion script for. [possible values: bash, elvish, fish, powershell, zsh]'
complete -c tauri -n '__fish_seen_subcommand_from completions' -s o -l output -d '<OUTPUT>  Output file for the shell completions. By default the completions are printed to stdout'
complete -c tauri -n '__fish_seen_subcommand_from completions' -s h -l help -d 'Print help'
complete -c tauri -n __fish_no_arguments -s V -l version -d 'Print version'
complete -f -c tauri -n __fish_use_subcommand -a permission -d 'Manage or create permissions for your app or plugin'
complete -c tauri -n '__fish_seen_subcommand_from permission' -s h -l help -d 'Print help'
complete -c tauri -n __fish_no_arguments -s V -l version -d 'Print version'
complete -f -c tauri -n __fish_use_subcommand -a capability -d 'Manage or create capabilities for your app'
complete -c tauri -n '__fish_seen_subcommand_from capability' -s h -l help -d 'Print help'
complete -c tauri -n __fish_no_arguments -s V -l version -d 'Print version'
complete -f -c tauri -n __fish_use_subcommand -a inspect -d 'Manage or create permissions for your app or plugin'
complete -c tauri -n '__fish_seen_subcommand_from inspect' -s h -l help -d 'Print help'
complete -c tauri -n __fish_no_arguments -s V -l version -d 'Print version'
complete -f -c tauri -n __fish_use_subcommand -a help -d 'Print this message or the help of the given subcommand(s)'
complete -c tauri -s h -l help -d 'Print help'
complete -c tauri -n __fish_no_arguments -s V -l version -d 'Print version'
