complete -f -c idb -n __fish_use_subcommand -a connect -d 'Connect to a companion'
complete -c idb -n '__fish_seen_subcommand_from connect' -s h -l help -d 'show this help message and exit'
complete -c idb -n '__fish_seen_subcommand_from connect' -l log -d '{DEBUG,INFO,WARNING,ERROR,CRITICAL}'
complete -c idb -n '__fish_seen_subcommand_from connect' -l json -d 'Create json structured output'
complete -f -c idb -n __fish_use_subcommand -a contacts -d 'Contacts database operations on target'
complete -c idb -n '__fish_seen_subcommand_from contacts' -s h -l help -d 'show this help message and exit'
complete -f -c idb -n __fish_use_subcommand -a crash -d 'Operations on crashes'
complete -c idb -n '__fish_seen_subcommand_from crash' -s h -l help -d 'show this help message and exit'
complete -f -c idb -n __fish_use_subcommand -a create -d 'Creates an iOS Simulator'
complete -c idb -n '__fish_seen_subcommand_from create' -s h -l help -d 'show this help message and exit'
complete -c idb -n '__fish_seen_subcommand_from create' -l log -d '{DEBUG,INFO,WARNING,ERROR,CRITICAL}'
complete -c idb -n '__fish_seen_subcommand_from create' -l json -d 'Create json structured output'
complete -f -c idb -n __fish_use_subcommand -a dap -d 'Spawn a new debug server using VSCode DAP protocol'
complete -c idb -n '__fish_seen_subcommand_from dap' -s h -l help -d 'show this help message and exit'
complete -c idb -n '__fish_seen_subcommand_from dap' -l udid -d 'UDID           Udid of target, can also be set with the IDB_UDID env'
complete -c idb -n '__fish_seen_subcommand_from dap' -l log -d '{DEBUG,INFO,WARNING,ERROR,CRITICAL}'
complete -c idb -n '__fish_seen_subcommand_from dap' -l json -d 'Create json structured output'
complete -f -c idb -n __fish_use_subcommand -a debugserver -d 'debugserver interactions'
complete -c idb -n '__fish_seen_subcommand_from debugserver' -s h -l help -d 'show this help message and exit'
complete -f -c idb -n __fish_use_subcommand -a delete -d 'Deletes (only works on mac)'
complete -c idb -n '__fish_seen_subcommand_from delete' -s h -l help -d 'show this help message and exit'
complete -c idb -n '__fish_seen_subcommand_from delete' -l log -d '{DEBUG,INFO,WARNING,ERROR,CRITICAL}'
complete -c idb -n '__fish_seen_subcommand_from delete' -l json -d 'Create json structured output'
complete -f -c idb -n __fish_use_subcommand -a delete-all -d 'Deletes all simulators (only works on mac)'
complete -c idb -n '__fish_seen_subcommand_from delete-all' -s h -l help -d 'show this help message and exit'
complete -c idb -n '__fish_seen_subcommand_from delete-all' -l log -d '{DEBUG,INFO,WARNING,ERROR,CRITICAL}'
complete -c idb -n '__fish_seen_subcommand_from delete-all' -l json -d 'Create json structured output'
complete -f -c idb -n __fish_use_subcommand -a describe -d 'Describes the Target'
complete -c idb -n '__fish_seen_subcommand_from describe' -s h -l help -d 'show this help message and exit'
complete -c idb -n '__fish_seen_subcommand_from describe' -l diagnostics -d 'Fetch additional target diagnostics'
complete -c idb -n '__fish_seen_subcommand_from describe' -l udid -d 'UDID           Udid of target, can also be set with the IDB_UDID env'
complete -c idb -n '__fish_seen_subcommand_from describe' -l log -d '{DEBUG,INFO,WARNING,ERROR,CRITICAL}'
complete -c idb -n '__fish_seen_subcommand_from describe' -l json -d 'Create json structured output'
complete -f -c idb -n __fish_use_subcommand -a disconnect -d 'Disconnect a companion'
complete -c idb -n '__fish_seen_subcommand_from disconnect' -s h -l help -d 'show this help message and exit'
complete -c idb -n '__fish_seen_subcommand_from disconnect' -l log -d '{DEBUG,INFO,WARNING,ERROR,CRITICAL}'
complete -c idb -n '__fish_seen_subcommand_from disconnect' -l json -d 'Create json structured output'
complete -f -c idb -n __fish_use_subcommand -a erase -d 'Erases the simulator (only works on mac)'
complete -c idb -n '__fish_seen_subcommand_from erase' -s h -l help -d 'show this help message and exit'
complete -c idb -n '__fish_seen_subcommand_from erase' -l log -d '{DEBUG,INFO,WARNING,ERROR,CRITICAL}'
complete -c idb -n '__fish_seen_subcommand_from erase' -l json -d 'Create json structured output'
complete -f -c idb -n __fish_use_subcommand -a file -d 'File operations on target'
complete -c idb -n '__fish_seen_subcommand_from file' -s h -l help -d 'show this help message and exit'
complete -f -c idb -n __fish_use_subcommand -a focus -d 'Brings the simulator window to front'
complete -c idb -n '__fish_seen_subcommand_from focus' -s h -l help -d 'show this help message and exit'
complete -c idb -n '__fish_seen_subcommand_from focus' -l udid -d 'UDID           Udid of target, can also be set with the IDB_UDID env'
complete -c idb -n '__fish_seen_subcommand_from focus' -l log -d '{DEBUG,INFO,WARNING,ERROR,CRITICAL}'
complete -c idb -n '__fish_seen_subcommand_from focus' -l json -d 'Create json structured output'
complete -f -c idb -n __fish_use_subcommand -a get -d 'Gets a preference value'
complete -c idb -n '__fish_seen_subcommand_from get' -s h -l help -d 'show this help message and exit'
complete -c idb -n '__fish_seen_subcommand_from get' -l domain -d 'DOMAIN       Preference domain, assumed to be Apple Global Domain'
complete -c idb -n '__fish_seen_subcommand_from get' -l udid -d 'UDID           Udid of target, can also be set with the IDB_UDID env'
complete -c idb -n '__fish_seen_subcommand_from get' -l log -d '{DEBUG,INFO,WARNING,ERROR,CRITICAL}'
complete -c idb -n '__fish_seen_subcommand_from get' -l json -d 'Create json structured output'
complete -f -c idb -n __fish_use_subcommand -a install -d 'Install an application'
complete -c idb -n '__fish_seen_subcommand_from install' -s h -l help -d 'show this help message and exit'
complete -c idb -n '__fish_seen_subcommand_from install' -l make-debuggable -d 'If set, will persist the application bundle alongside'
complete -c idb -n '__fish_seen_subcommand_from install' -l udid -d 'UDID           Udid of target, can also be set with the IDB_UDID env'
complete -c idb -n '__fish_seen_subcommand_from install' -l log -d '{DEBUG,INFO,WARNING,ERROR,CRITICAL}'
complete -c idb -n '__fish_seen_subcommand_from install' -l json -d 'Create json structured output'
complete -f -c idb -n __fish_use_subcommand -a instruments -d 'Run instruments on the device'
complete -c idb -n '__fish_seen_subcommand_from instruments' -s h -l help -d 'show this help message and exit'
complete -c idb -n '__fish_seen_subcommand_from instruments' -l template -d 'TEMPLATE   Template to run (see Apple for possible values)'
complete -c idb -n '__fish_seen_subcommand_from instruments' -l app-bundle-id -d APP_BUNDLE_ID
complete -c idb -n '__fish_seen_subcommand_from instruments' -l app-args -d '[APP_ARGS ...]'
complete -c idb -n '__fish_seen_subcommand_from instruments' -l app-env -d 'KEY=VALUE   Environment key/value pairs for the app being profiled'
complete -c idb -n '__fish_seen_subcommand_from instruments' -l output -d 'OUTPUT       Output path / base name where the trace file will be'
complete -c idb -n '__fish_seen_subcommand_from instruments' -l post-args -d '[POST_ARGS ...]'
complete -c idb -n '__fish_seen_subcommand_from instruments' -l operation-duration -d OPERATION_DURATION
complete -c idb -n '__fish_seen_subcommand_from instruments' -l terminate-timeout -d TERMINATE_TIMEOUT
complete -c idb -n '__fish_seen_subcommand_from instruments' -l launch-retry-timeout -d LAUNCH_RETRY_TIMEOUT
complete -c idb -n '__fish_seen_subcommand_from instruments' -l launch-error-timeout -d LAUNCH_ERROR_TIMEOUT
complete -c idb -n '__fish_seen_subcommand_from instruments' -l udid -d 'UDID           Udid of target, can also be set with the IDB_UDID env'
complete -c idb -n '__fish_seen_subcommand_from instruments' -l log -d '{DEBUG,INFO,WARNING,ERROR,CRITICAL}'
complete -c idb -n '__fish_seen_subcommand_from instruments' -l json -d 'Create json structured output'
complete -f -c idb -n __fish_use_subcommand -a kill -d 'Kill the idb daemon'
complete -c idb -n '__fish_seen_subcommand_from kill' -s h -l help -d 'show this help message and exit'
complete -c idb -n '__fish_seen_subcommand_from kill' -l log -d '{DEBUG,INFO,WARNING,ERROR,CRITICAL}'
complete -c idb -n '__fish_seen_subcommand_from kill' -l json -d 'Create json structured output'
complete -f -c idb -n __fish_use_subcommand -a launch -d 'Launch an application. Any environment variables of the form IDB_X'
complete -c idb -n '__fish_seen_subcommand_from launch' -s h -l help -d 'show this help message and exit'
complete -c idb -n '__fish_seen_subcommand_from launch' -s w -l wait-for -d 'Wait for the process to exit, tailing all output from'
complete -c idb -n '__fish_seen_subcommand_from launch' -s p -d 'PID_FILE, --pid-file PID_FILE'
complete -c idb -n '__fish_seen_subcommand_from launch' -l udid -d 'UDID           Udid of target, can also be set with the IDB_UDID env'
complete -c idb -n '__fish_seen_subcommand_from launch' -l log -d '{DEBUG,INFO,WARNING,ERROR,CRITICAL}'
complete -c idb -n '__fish_seen_subcommand_from launch' -l json -d 'Create json structured output'
complete -f -c idb -n __fish_use_subcommand -a will -d 'be passed through with the IDB_ prefix removed.'
complete -f -c idb -n __fish_use_subcommand -a list -d 'Lists values from the target'
complete -c idb -n '__fish_seen_subcommand_from list' -s h -l help -d 'show this help message and exit'
complete -f -c idb -n __fish_use_subcommand -a list-apps -d 'List the installed apps'
complete -c idb -n '__fish_seen_subcommand_from list-apps' -s h -l help -d 'show this help message and exit'
complete -c idb -n '__fish_seen_subcommand_from list-apps' -l udid -d 'UDID           Udid of target, can also be set with the IDB_UDID env'
complete -c idb -n '__fish_seen_subcommand_from list-apps' -l log -d '{DEBUG,INFO,WARNING,ERROR,CRITICAL}'
complete -c idb -n '__fish_seen_subcommand_from list-apps' -l json -d 'Create json structured output'
complete -f -c idb -n __fish_use_subcommand -a list-targets -d 'Lists connected and available targets'
complete -c idb -n '__fish_seen_subcommand_from list-targets' -s h -l help -d 'show this help message and exit'
complete -c idb -n '__fish_seen_subcommand_from list-targets' -l only -d '{device,simulator,mac}'
complete -c idb -n '__fish_seen_subcommand_from list-targets' -l log -d '{DEBUG,INFO,WARNING,ERROR,CRITICAL}'
complete -c idb -n '__fish_seen_subcommand_from list-targets' -l json -d 'Create json structured output'
complete -f -c idb -n __fish_use_subcommand -a log -d 'Obtain logs from the target'
complete -c idb -n '__fish_seen_subcommand_from log' -l system -d '| --process (pid|process) | --parent'
complete -c idb -n '__fish_seen_subcommand_from log' -l predicate -d '<predicate> ] [ --source ][ --style'
complete -c idb -n '__fish_seen_subcommand_from log' -l predicate -d '\'processImagePath endswith "d"\''
complete -c idb -n '__fish_seen_subcommand_from log' -l predicate -d '\'not processImagePath contains[c] "some'
complete -c idb -n '__fish_seen_subcommand_from log' -s h -l help -d 'show this help message and exit'
complete -c idb -n '__fish_seen_subcommand_from log' -l udid -d 'UDID           Udid of target, can also be set with the IDB_UDID env'
complete -c idb -n '__fish_seen_subcommand_from log' -l log -d '{DEBUG,INFO,WARNING,ERROR,CRITICAL}'
complete -c idb -n '__fish_seen_subcommand_from log' -l json -d 'Create json structured output'
complete -f -c idb -n __fish_use_subcommand -a open -d 'Open a URL'
complete -c idb -n '__fish_seen_subcommand_from open' -s h -l help -d 'show this help message and exit'
complete -c idb -n '__fish_seen_subcommand_from open' -l udid -d 'UDID           Udid of target, can also be set with the IDB_UDID env'
complete -c idb -n '__fish_seen_subcommand_from open' -l log -d '{DEBUG,INFO,WARNING,ERROR,CRITICAL}'
complete -c idb -n '__fish_seen_subcommand_from open' -l json -d 'Create json structured output'
complete -f -c idb -n __fish_use_subcommand -a record -d 'Record what the screen is doing'
complete -c idb -n '__fish_seen_subcommand_from record' -s h -l help -d 'show this help message and exit'
complete -f -c idb -n __fish_use_subcommand -a screenshot -d 'Take a Screenshot of the Target'
complete -c idb -n '__fish_seen_subcommand_from screenshot' -s h -l help -d 'show this help message and exit'
complete -c idb -n '__fish_seen_subcommand_from screenshot' -l udid -d 'UDID           Udid of target, can also be set with the IDB_UDID env'
complete -c idb -n '__fish_seen_subcommand_from screenshot' -l log -d '{DEBUG,INFO,WARNING,ERROR,CRITICAL}'
complete -c idb -n '__fish_seen_subcommand_from screenshot' -l json -d 'Create json structured output'
complete -f -c idb -n __fish_use_subcommand -a send-notification -d 'Open a URL'
complete -c idb -n '__fish_seen_subcommand_from send-notification' -s h -l help -d 'show this help message and exit'
complete -c idb -n '__fish_seen_subcommand_from send-notification' -l udid -d 'UDID           Udid of target, can also be set with the IDB_UDID env'
complete -c idb -n '__fish_seen_subcommand_from send-notification' -l log -d '{DEBUG,INFO,WARNING,ERROR,CRITICAL}'
complete -c idb -n '__fish_seen_subcommand_from send-notification' -l json -d 'Create json structured output'
complete -f -c idb -n __fish_use_subcommand -a set -d 'Sets a preference'
complete -c idb -n '__fish_seen_subcommand_from set' -s h -l help -d 'show this help message and exit'
complete -c idb -n '__fish_seen_subcommand_from set' -l domain -d 'DOMAIN       Preference domain, assumed to be Apple Global Domain'
complete -c idb -n '__fish_seen_subcommand_from set' -l type -d 'TYPE           Specifies the type of the value to be set, for'
complete -c idb -n '__fish_seen_subcommand_from set' -l udid -d 'UDID           Udid of target, can also be set with the IDB_UDID env'
complete -c idb -n '__fish_seen_subcommand_from set' -l log -d '{DEBUG,INFO,WARNING,ERROR,CRITICAL}'
complete -c idb -n '__fish_seen_subcommand_from set' -l json -d 'Create json structured output'
complete -f -c idb -n __fish_use_subcommand -a set-location -d "Set a simulator's location"
complete -c idb -n '__fish_seen_subcommand_from set-location' -s h -l help -d 'show this help message and exit'
complete -c idb -n '__fish_seen_subcommand_from set-location' -l udid -d 'UDID           Udid of target, can also be set with the IDB_UDID env'
complete -c idb -n '__fish_seen_subcommand_from set-location' -l log -d '{DEBUG,INFO,WARNING,ERROR,CRITICAL}'
complete -c idb -n '__fish_seen_subcommand_from set-location' -l json -d 'Create json structured output'
complete -f -c idb -n __fish_use_subcommand -a shell -d 'Interactive shell'
complete -c idb -n '__fish_seen_subcommand_from shell' -s h -l help -d 'show this help message and exit'
complete -c idb -n '__fish_seen_subcommand_from shell' -l no-prompt -d "Don't print the input prompt. Useful for automation"
complete -c idb -n '__fish_seen_subcommand_from shell' -l udid -d 'UDID           Udid of target, can also be set with the IDB_UDID env'
complete -c idb -n '__fish_seen_subcommand_from shell' -l log -d '{DEBUG,INFO,WARNING,ERROR,CRITICAL}'
complete -c idb -n '__fish_seen_subcommand_from shell' -l json -d 'Create json structured output'
complete -f -c idb -n __fish_use_subcommand -a shutdown -d 'Shuts the simulator down (only works on mac)'
complete -c idb -n '__fish_seen_subcommand_from shutdown' -s h -l help -d 'show this help message and exit'
complete -c idb -n '__fish_seen_subcommand_from shutdown' -l log -d '{DEBUG,INFO,WARNING,ERROR,CRITICAL}'
complete -c idb -n '__fish_seen_subcommand_from shutdown' -l json -d 'Create json structured output'
complete -c idb -s h -l help -d 'show this help message and exit'
complete -c idb -l log -d '{DEBUG,INFO,WARNING,ERROR,CRITICAL}'
complete -c idb -l compression -d '{GZIP,ZSTD}'
complete -c idb -l companion -d COMPANION
complete -c idb -l companion-path -d COMPANION_PATH
complete -c idb -l companion-tls -d 'Will force idb client to use TLS encrypted connection to companion.Can also be set with the IDB_COMPANION_TLS environment variable'
complete -c idb -n '__fish_seen_subcommand_from connect' -s h -l help -d 'show this help message and exit'
complete -c idb -n '__fish_seen_subcommand_from connect' -l log -d '{DEBUG,INFO,WARNING,ERROR,CRITICAL}'
complete -c idb -n '__fish_seen_subcommand_from connect' -l json -d 'Create json structured output'
complete -c idb -n '__fish_seen_subcommand_from contacts' -s h -l help -d 'show this help message and exit'
complete -c idb -n '__fish_seen_subcommand_from crash' -s h -l help -d 'show this help message and exit'
complete -c idb -n '__fish_seen_subcommand_from create' -s h -l help -d 'show this help message and exit'
complete -c idb -n '__fish_seen_subcommand_from create' -l log -d '{DEBUG,INFO,WARNING,ERROR,CRITICAL}'
complete -c idb -n '__fish_seen_subcommand_from create' -l json -d 'Create json structured output'
complete -c idb -n '__fish_seen_subcommand_from dap' -s h -l help -d 'show this help message and exit'
complete -c idb -n '__fish_seen_subcommand_from dap' -l udid -d 'UDID           Udid of target, can also be set with the IDB_UDID env'
complete -c idb -n '__fish_seen_subcommand_from dap' -l log -d '{DEBUG,INFO,WARNING,ERROR,CRITICAL}'
complete -c idb -n '__fish_seen_subcommand_from dap' -l json -d 'Create json structured output'
complete -c idb -n '__fish_seen_subcommand_from debugserver' -s h -l help -d 'show this help message and exit'
complete -c idb -n '__fish_seen_subcommand_from delete' -s h -l help -d 'show this help message and exit'
complete -c idb -n '__fish_seen_subcommand_from delete' -l log -d '{DEBUG,INFO,WARNING,ERROR,CRITICAL}'
complete -c idb -n '__fish_seen_subcommand_from delete' -l json -d 'Create json structured output'
complete -c idb -n '__fish_seen_subcommand_from delete-all' -s h -l help -d 'show this help message and exit'
complete -c idb -n '__fish_seen_subcommand_from delete-all' -l log -d '{DEBUG,INFO,WARNING,ERROR,CRITICAL}'
complete -c idb -n '__fish_seen_subcommand_from delete-all' -l json -d 'Create json structured output'
complete -c idb -n '__fish_seen_subcommand_from describe' -s h -l help -d 'show this help message and exit'
complete -c idb -n '__fish_seen_subcommand_from describe' -l diagnostics -d 'Fetch additional target diagnostics'
complete -c idb -n '__fish_seen_subcommand_from describe' -l udid -d 'UDID           Udid of target, can also be set with the IDB_UDID env'
complete -c idb -n '__fish_seen_subcommand_from describe' -l log -d '{DEBUG,INFO,WARNING,ERROR,CRITICAL}'
complete -c idb -n '__fish_seen_subcommand_from describe' -l json -d 'Create json structured output'
complete -c idb -n '__fish_seen_subcommand_from disconnect' -s h -l help -d 'show this help message and exit'
complete -c idb -n '__fish_seen_subcommand_from disconnect' -l log -d '{DEBUG,INFO,WARNING,ERROR,CRITICAL}'
complete -c idb -n '__fish_seen_subcommand_from disconnect' -l json -d 'Create json structured output'
complete -c idb -n '__fish_seen_subcommand_from erase' -s h -l help -d 'show this help message and exit'
complete -c idb -n '__fish_seen_subcommand_from erase' -l log -d '{DEBUG,INFO,WARNING,ERROR,CRITICAL}'
complete -c idb -n '__fish_seen_subcommand_from erase' -l json -d 'Create json structured output'
complete -c idb -n '__fish_seen_subcommand_from file' -s h -l help -d 'show this help message and exit'
complete -c idb -n '__fish_seen_subcommand_from focus' -s h -l help -d 'show this help message and exit'
complete -c idb -n '__fish_seen_subcommand_from focus' -l udid -d 'UDID           Udid of target, can also be set with the IDB_UDID env'
complete -c idb -n '__fish_seen_subcommand_from focus' -l log -d '{DEBUG,INFO,WARNING,ERROR,CRITICAL}'
complete -c idb -n '__fish_seen_subcommand_from focus' -l json -d 'Create json structured output'
complete -c idb -n '__fish_seen_subcommand_from get' -s h -l help -d 'show this help message and exit'
complete -c idb -n '__fish_seen_subcommand_from get' -l domain -d 'DOMAIN       Preference domain, assumed to be Apple Global Domain'
complete -c idb -n '__fish_seen_subcommand_from get' -l udid -d 'UDID           Udid of target, can also be set with the IDB_UDID env'
complete -c idb -n '__fish_seen_subcommand_from get' -l log -d '{DEBUG,INFO,WARNING,ERROR,CRITICAL}'
complete -c idb -n '__fish_seen_subcommand_from get' -l json -d 'Create json structured output'
complete -c idb -n '__fish_seen_subcommand_from install' -s h -l help -d 'show this help message and exit'
complete -c idb -n '__fish_seen_subcommand_from install' -l make-debuggable -d 'If set, will persist the application bundle alongside'
complete -c idb -n '__fish_seen_subcommand_from install' -l udid -d 'UDID           Udid of target, can also be set with the IDB_UDID env'
complete -c idb -n '__fish_seen_subcommand_from install' -l log -d '{DEBUG,INFO,WARNING,ERROR,CRITICAL}'
complete -c idb -n '__fish_seen_subcommand_from install' -l json -d 'Create json structured output'
complete -c idb -n '__fish_seen_subcommand_from instruments' -s h -l help -d 'show this help message and exit'
complete -c idb -n '__fish_seen_subcommand_from instruments' -l template -d 'TEMPLATE   Template to run (see Apple for possible values)'
complete -c idb -n '__fish_seen_subcommand_from instruments' -l app-bundle-id -d APP_BUNDLE_ID
complete -c idb -n '__fish_seen_subcommand_from instruments' -l app-args -d '[APP_ARGS ...]'
complete -c idb -n '__fish_seen_subcommand_from instruments' -l app-env -d 'KEY=VALUE   Environment key/value pairs for the app being profiled'
complete -c idb -n '__fish_seen_subcommand_from instruments' -l output -d 'OUTPUT       Output path / base name where the trace file will be'
complete -c idb -n '__fish_seen_subcommand_from instruments' -l post-args -d '[POST_ARGS ...]'
complete -c idb -n '__fish_seen_subcommand_from instruments' -l operation-duration -d OPERATION_DURATION
complete -c idb -n '__fish_seen_subcommand_from instruments' -l terminate-timeout -d TERMINATE_TIMEOUT
complete -c idb -n '__fish_seen_subcommand_from instruments' -l launch-retry-timeout -d LAUNCH_RETRY_TIMEOUT
complete -c idb -n '__fish_seen_subcommand_from instruments' -l launch-error-timeout -d LAUNCH_ERROR_TIMEOUT
complete -c idb -n '__fish_seen_subcommand_from instruments' -l udid -d 'UDID           Udid of target, can also be set with the IDB_UDID env'
complete -c idb -n '__fish_seen_subcommand_from instruments' -l log -d '{DEBUG,INFO,WARNING,ERROR,CRITICAL}'
complete -c idb -n '__fish_seen_subcommand_from instruments' -l json -d 'Create json structured output'
complete -c idb -n '__fish_seen_subcommand_from kill' -s h -l help -d 'show this help message and exit'
complete -c idb -n '__fish_seen_subcommand_from kill' -l log -d '{DEBUG,INFO,WARNING,ERROR,CRITICAL}'
complete -c idb -n '__fish_seen_subcommand_from kill' -l json -d 'Create json structured output'
complete -c idb -n '__fish_seen_subcommand_from launch' -s h -l help -d 'show this help message and exit'
complete -c idb -n '__fish_seen_subcommand_from launch' -s w -l wait-for -d 'Wait for the process to exit, tailing all output from'
complete -c idb -n '__fish_seen_subcommand_from launch' -s p -d 'PID_FILE, --pid-file PID_FILE'
complete -c idb -n '__fish_seen_subcommand_from launch' -l udid -d 'UDID           Udid of target, can also be set with the IDB_UDID env'
complete -c idb -n '__fish_seen_subcommand_from launch' -l log -d '{DEBUG,INFO,WARNING,ERROR,CRITICAL}'
complete -c idb -n '__fish_seen_subcommand_from launch' -l json -d 'Create json structured output'
complete -c idb -n '__fish_seen_subcommand_from list' -s h -l help -d 'show this help message and exit'
complete -c idb -n '__fish_seen_subcommand_from list-apps' -s h -l help -d 'show this help message and exit'
complete -c idb -n '__fish_seen_subcommand_from list-apps' -l udid -d 'UDID           Udid of target, can also be set with the IDB_UDID env'
complete -c idb -n '__fish_seen_subcommand_from list-apps' -l log -d '{DEBUG,INFO,WARNING,ERROR,CRITICAL}'
complete -c idb -n '__fish_seen_subcommand_from list-apps' -l json -d 'Create json structured output'
complete -c idb -n '__fish_seen_subcommand_from log' -l system -d '| --process (pid|process) | --parent'
complete -c idb -n '__fish_seen_subcommand_from log' -l predicate -d '<predicate> ] [ --source ][ --style'
complete -c idb -n '__fish_seen_subcommand_from log' -l predicate -d '\'processImagePath endswith "d"\''
complete -c idb -n '__fish_seen_subcommand_from log' -l predicate -d '\'not processImagePath contains[c] "some'
complete -c idb -n '__fish_seen_subcommand_from log' -s h -l help -d 'show this help message and exit'
complete -c idb -n '__fish_seen_subcommand_from log' -l udid -d 'UDID           Udid of target, can also be set with the IDB_UDID env'
complete -c idb -n '__fish_seen_subcommand_from log' -l log -d '{DEBUG,INFO,WARNING,ERROR,CRITICAL}'
complete -c idb -n '__fish_seen_subcommand_from log' -l json -d 'Create json structured output'
complete -c idb -n '__fish_seen_subcommand_from open' -s h -l help -d 'show this help message and exit'
complete -c idb -n '__fish_seen_subcommand_from open' -l udid -d 'UDID           Udid of target, can also be set with the IDB_UDID env'
complete -c idb -n '__fish_seen_subcommand_from open' -l log -d '{DEBUG,INFO,WARNING,ERROR,CRITICAL}'
complete -c idb -n '__fish_seen_subcommand_from open' -l json -d 'Create json structured output'
complete -c idb -n '__fish_seen_subcommand_from record' -s h -l help -d 'show this help message and exit'
complete -c idb -n '__fish_seen_subcommand_from screenshot' -s h -l help -d 'show this help message and exit'
complete -c idb -n '__fish_seen_subcommand_from screenshot' -l udid -d 'UDID           Udid of target, can also be set with the IDB_UDID env'
complete -c idb -n '__fish_seen_subcommand_from screenshot' -l log -d '{DEBUG,INFO,WARNING,ERROR,CRITICAL}'
complete -c idb -n '__fish_seen_subcommand_from screenshot' -l json -d 'Create json structured output'
complete -c idb -n '__fish_seen_subcommand_from set' -s h -l help -d 'show this help message and exit'
complete -c idb -n '__fish_seen_subcommand_from set' -l domain -d 'DOMAIN       Preference domain, assumed to be Apple Global Domain'
complete -c idb -n '__fish_seen_subcommand_from set' -l type -d 'TYPE           Specifies the type of the value to be set, for'
complete -c idb -n '__fish_seen_subcommand_from set' -l udid -d 'UDID           Udid of target, can also be set with the IDB_UDID env'
complete -c idb -n '__fish_seen_subcommand_from set' -l log -d '{DEBUG,INFO,WARNING,ERROR,CRITICAL}'
complete -c idb -n '__fish_seen_subcommand_from set' -l json -d 'Create json structured output'
complete -c idb -n '__fish_seen_subcommand_from shell' -s h -l help -d 'show this help message and exit'
complete -c idb -n '__fish_seen_subcommand_from shell' -l no-prompt -d "Don't print the input prompt. Useful for automation"
complete -c idb -n '__fish_seen_subcommand_from shell' -l udid -d 'UDID           Udid of target, can also be set with the IDB_UDID env'
complete -c idb -n '__fish_seen_subcommand_from shell' -l log -d '{DEBUG,INFO,WARNING,ERROR,CRITICAL}'
complete -c idb -n '__fish_seen_subcommand_from shell' -l json -d 'Create json structured output'
complete -c idb -n '__fish_seen_subcommand_from shutdown' -s h -l help -d 'show this help message and exit'
complete -c idb -n '__fish_seen_subcommand_from shutdown' -l log -d '{DEBUG,INFO,WARNING,ERROR,CRITICAL}'
complete -c idb -n '__fish_seen_subcommand_from shutdown' -l json -d 'Create json structured output'
