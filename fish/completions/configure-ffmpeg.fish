complete -c configure-ffmpeg -l help -d 'print this message'
complete -c configure-ffmpeg -l quiet -d 'Suppress showing informative output'
complete -c configure-ffmpeg -l list-decoders -d 'show all available decoders'
complete -c configure-ffmpeg -l list-encoders -d 'show all available encoders'
complete -c configure-ffmpeg -l list-hwaccels -d 'show all available hardware accelerators'
complete -c configure-ffmpeg -l list-demuxers -d 'show all available demuxers'
complete -c configure-ffmpeg -l list-muxers -d 'show all available muxers'
complete -c configure-ffmpeg -l list-parsers -d 'show all available parsers'
complete -c configure-ffmpeg -l list-protocols -d 'show all available protocols'
complete -c configure-ffmpeg -l list-bsfs -d 'show all available bitstream filters'
complete -c configure-ffmpeg -l list-indevs -d 'show all available input devices'
complete -c configure-ffmpeg -l list-outdevs -d 'show all available output devices'
complete -c configure-ffmpeg -l list-filters -d 'show all available filters'
complete -c configure-ffmpeg -l disable-logging -d 'do not log configure debug information'
complete -c configure-ffmpeg -l fatal-warnings -d 'fail if any configure warning is generated'
complete -c configure-ffmpeg -l enable-rpath -d 'use rpath to allow installing libraries in paths'
complete -c configure-ffmpeg -l enable-gpl -d 'allow use of GPL code, the resulting libs'
complete -c configure-ffmpeg -l enable-version3 -d 'upgrade (L)GPL to version 3 [no]'
complete -c configure-ffmpeg -l enable-nonfree -d 'allow use of nonfree code, the resulting libs'
complete -c configure-ffmpeg -l disable-static -d 'do not build static libraries [no]'
complete -c configure-ffmpeg -l enable-shared -d 'build shared libraries [no]'
complete -c configure-ffmpeg -l enable-small -d 'optimize for size instead of speed'
complete -c configure-ffmpeg -l disable-runtime-cpudetect -d 'disable detecting CPU capabilities at runtime (smaller binary)'
complete -c configure-ffmpeg -l enable-gray -d 'enable full grayscale support (slower color)'
complete -c configure-ffmpeg -l disable-swscale-alpha -d 'disable alpha channel support in swscale'
complete -c configure-ffmpeg -l disable-all -d 'disable building components, libraries and programs'
complete -c configure-ffmpeg -l disable-autodetect -d 'disable automatically detected external libraries [no]'
complete -c configure-ffmpeg -l disable-programs -d 'do not build command line programs'
complete -c configure-ffmpeg -l disable-ffmpeg -d 'disable ffmpeg build'
complete -c configure-ffmpeg -l disable-ffplay -d 'disable ffplay build'
complete -c configure-ffmpeg -l disable-ffprobe -d 'disable ffprobe build'
complete -c configure-ffmpeg -l disable-doc -d 'do not build documentation'
complete -c configure-ffmpeg -l disable-htmlpages -d 'do not build HTML documentation pages'
complete -c configure-ffmpeg -l disable-manpages -d 'do not build man documentation pages'
complete -c configure-ffmpeg -l disable-podpages -d 'do not build POD documentation pages'
complete -c configure-ffmpeg -l disable-txtpages -d 'do not build text documentation pages'
complete -c configure-ffmpeg -l disable-avdevice -d 'disable libavdevice build'
complete -c configure-ffmpeg -l disable-avcodec -d 'disable libavcodec build'
complete -c configure-ffmpeg -l disable-avformat -d 'disable libavformat build'
complete -c configure-ffmpeg -l disable-swresample -d 'disable libswresample build'
complete -c configure-ffmpeg -l disable-swscale -d 'disable libswscale build'
complete -c configure-ffmpeg -l disable-postproc -d 'disable libpostproc build'
complete -c configure-ffmpeg -l disable-avfilter -d 'disable libavfilter build'
complete -c configure-ffmpeg -l disable-pthreads -d 'disable pthreads [autodetect]'
complete -c configure-ffmpeg -l disable-w32threads -d 'disable Win32 threads [autodetect]'
complete -c configure-ffmpeg -l disable-os2threads -d 'disable OS/2 threads [autodetect]'
complete -c configure-ffmpeg -l disable-network -d 'disable network support [no]'
complete -c configure-ffmpeg -l disable-dwt -d 'disable DWT code'
complete -c configure-ffmpeg -l disable-error-resilience -d 'disable error resilience code'
complete -c configure-ffmpeg -l disable-lsp -d 'disable LSP code'
complete -c configure-ffmpeg -l disable-faan -d 'disable floating point AAN (I)DCT code'
complete -c configure-ffmpeg -l disable-iamf -d 'disable support for Immersive Audio Model'
complete -c configure-ffmpeg -l disable-pixelutils -d 'disable pixel utils in libavutil'
complete -c configure-ffmpeg -l disable-everything -d 'disable all components listed below'
complete -c configure-ffmpeg -l disable-encoders -d 'disable all encoders'
complete -c configure-ffmpeg -l disable-decoders -d 'disable all decoders'
complete -c configure-ffmpeg -l disable-hwaccels -d 'disable all hwaccels'
complete -c configure-ffmpeg -l disable-muxers -d 'disable all muxers'
complete -c configure-ffmpeg -l disable-demuxers -d 'disable all demuxers'
complete -c configure-ffmpeg -l disable-parsers -d 'disable all parsers'
complete -c configure-ffmpeg -l disable-bsfs -d 'disable all bitstream filters'
complete -c configure-ffmpeg -l disable-protocols -d 'disable all protocols'
complete -c configure-ffmpeg -l disable-indevs -d 'disable input devices'
complete -c configure-ffmpeg -l disable-outdevs -d 'disable output devices'
complete -c configure-ffmpeg -l disable-devices -d 'disable all devices'
complete -c configure-ffmpeg -l disable-filters -d 'disable all filters'
complete -c configure-ffmpeg -l disable-alsa -d 'disable ALSA support [autodetect]'
complete -c configure-ffmpeg -l disable-appkit -d 'disable Apple AppKit framework [autodetect]'
complete -c configure-ffmpeg -l disable-avfoundation -d 'disable Apple AVFoundation framework [autodetect]'
complete -c configure-ffmpeg -l enable-avisynth -d 'enable reading of AviSynth script files [no]'
complete -c configure-ffmpeg -l disable-bzlib -d 'disable bzlib [autodetect]'
complete -c configure-ffmpeg -l disable-coreimage -d 'disable Apple CoreImage framework [autodetect]'
complete -c configure-ffmpeg -l enable-chromaprint -d 'enable audio fingerprinting with chromaprint [no]'
complete -c configure-ffmpeg -l enable-frei0r -d 'enable frei0r video filtering [no]'
complete -c configure-ffmpeg -l enable-gcrypt -d 'enable gcrypt, needed for rtmp(t)e support'
complete -c configure-ffmpeg -l enable-gmp -d 'enable gmp, needed for rtmp(t)e support'
complete -c configure-ffmpeg -l enable-gnutls -d 'enable gnutls, needed for https support'
complete -c configure-ffmpeg -l disable-iconv -d 'disable iconv [autodetect]'
complete -c configure-ffmpeg -l enable-jni -d 'enable JNI support [no]'
complete -c configure-ffmpeg -l enable-ladspa -d 'enable LADSPA audio filtering [no]'
complete -c configure-ffmpeg -l enable-lcms2 -d 'enable ICC profile support via LittleCMS 2 [no]'
complete -c configure-ffmpeg -l enable-libaom -d 'enable AV1 video encoding/decoding via libaom [no]'
complete -c configure-ffmpeg -l enable-libaribb24 -d 'enable ARIB text and caption decoding via libaribb24 [no]'
complete -c configure-ffmpeg -l enable-libaribcaption -d 'enable ARIB text and caption decoding via libaribcaption [no]'
complete -c configure-ffmpeg -l enable-libass -d 'enable libass subtitles rendering,'
complete -c configure-ffmpeg -l enable-libbluray -d 'enable BluRay reading using libbluray [no]'
complete -c configure-ffmpeg -l enable-libbs2b -d 'enable bs2b DSP library [no]'
complete -c configure-ffmpeg -l enable-libcaca -d 'enable textual display using libcaca [no]'
complete -c configure-ffmpeg -l enable-libcelt -d 'enable CELT decoding via libcelt [no]'
complete -c configure-ffmpeg -l enable-libcdio -d 'enable audio CD grabbing with libcdio [no]'
complete -c configure-ffmpeg -l enable-libcodec2 -d 'enable codec2 en/decoding using libcodec2 [no]'
complete -c configure-ffmpeg -l enable-libdav1d -d 'enable AV1 decoding via libdav1d [no]'
complete -c configure-ffmpeg -l enable-libdavs2 -d 'enable AVS2 decoding via libdavs2 [no]'
complete -c configure-ffmpeg -l enable-libdc1394 -d 'enable IIDC-1394 grabbing using libdc1394'
complete -c configure-ffmpeg -l enable-libdvdnav -d 'enable libdvdnav, needed for DVD demuxing [no]'
complete -c configure-ffmpeg -l enable-libdvdread -d 'enable libdvdread, needed for DVD demuxing [no]'
complete -c configure-ffmpeg -l enable-libfdk-aac -d 'enable AAC de/encoding via libfdk-aac [no]'
complete -c configure-ffmpeg -l enable-libflite -d 'enable flite (voice synthesis) support via libflite [no]'
complete -c configure-ffmpeg -l enable-libfontconfig -d 'enable libfontconfig, useful for drawtext filter [no]'
complete -c configure-ffmpeg -l enable-libfreetype -d 'enable libfreetype, needed for drawtext filter [no]'
complete -c configure-ffmpeg -l enable-libfribidi -d 'enable libfribidi, improves drawtext filter [no]'
complete -c configure-ffmpeg -l enable-libharfbuzz -d 'enable libharfbuzz, needed for drawtext filter [no]'
complete -c configure-ffmpeg -l enable-libglslang -d 'enable GLSL->SPIRV compilation via libglslang [no]'
complete -c configure-ffmpeg -l enable-libgme -d 'enable Game Music Emu via libgme [no]'
complete -c configure-ffmpeg -l enable-libgsm -d 'enable GSM de/encoding via libgsm [no]'
complete -c configure-ffmpeg -l enable-libiec61883 -d 'enable iec61883 via libiec61883 [no]'
complete -c configure-ffmpeg -l enable-libilbc -d 'enable iLBC de/encoding via libilbc [no]'
complete -c configure-ffmpeg -l enable-libjack -d 'enable JACK audio sound server [no]'
complete -c configure-ffmpeg -l enable-libjxl -d 'enable JPEG XL de/encoding via libjxl [no]'
complete -c configure-ffmpeg -l enable-libklvanc -d 'enable Kernel Labs VANC processing [no]'
complete -c configure-ffmpeg -l enable-libkvazaar -d 'enable HEVC encoding via libkvazaar [no]'
complete -c configure-ffmpeg -l enable-liblc3 -d 'enable LC3 de/encoding via liblc3 [no]'
complete -c configure-ffmpeg -l enable-liblcevc-dec -d 'enable LCEVC decoding via liblcevc-dec [no]'
complete -c configure-ffmpeg -l enable-liblensfun -d 'enable lensfun lens correction [no]'
complete -c configure-ffmpeg -l enable-libmodplug -d 'enable ModPlug via libmodplug [no]'
complete -c configure-ffmpeg -l enable-libmp3lame -d 'enable MP3 encoding via libmp3lame [no]'
complete -c configure-ffmpeg -l enable-libopencore-amrnb -d 'enable AMR-NB de/encoding via libopencore-amrnb [no]'
complete -c configure-ffmpeg -l enable-libopencore-amrwb -d 'enable AMR-WB decoding via libopencore-amrwb [no]'
complete -c configure-ffmpeg -l enable-libopencv -d 'enable video filtering via libopencv [no]'
complete -c configure-ffmpeg -l enable-libopenh264 -d 'enable H.264 encoding via OpenH264 [no]'
complete -c configure-ffmpeg -l enable-libopenjpeg -d 'enable JPEG 2000 encoding via OpenJPEG [no]'
complete -c configure-ffmpeg -l enable-libopenmpt -d 'enable decoding tracked files via libopenmpt [no]'
complete -c configure-ffmpeg -l enable-libopenvino -d 'enable OpenVINO as a DNN module backend'
complete -c configure-ffmpeg -l enable-libopus -d 'enable Opus de/encoding via libopus [no]'
complete -c configure-ffmpeg -l enable-libplacebo -d 'enable libplacebo library [no]'
complete -c configure-ffmpeg -l enable-libpulse -d 'enable Pulseaudio input via libpulse [no]'
complete -c configure-ffmpeg -l enable-libqrencode -d 'enable QR encode generation via libqrencode [no]'
complete -c configure-ffmpeg -l enable-libquirc -d 'enable QR decoding via libquirc [no]'
complete -c configure-ffmpeg -l enable-librabbitmq -d 'enable RabbitMQ library [no]'
complete -c configure-ffmpeg -l enable-librav1e -d 'enable AV1 encoding via rav1e [no]'
complete -c configure-ffmpeg -l enable-librist -d 'enable RIST via librist [no]'
complete -c configure-ffmpeg -l enable-librsvg -d 'enable SVG rasterization via librsvg [no]'
complete -c configure-ffmpeg -l enable-librubberband -d 'enable rubberband needed for rubberband filter [no]'
complete -c configure-ffmpeg -l enable-librtmp -d 'enable RTMP[E] support via librtmp [no]'
complete -c configure-ffmpeg -l enable-libshaderc -d 'enable GLSL->SPIRV compilation via libshaderc [no]'
complete -c configure-ffmpeg -l enable-libshine -d 'enable fixed-point MP3 encoding via libshine [no]'
complete -c configure-ffmpeg -l enable-libsmbclient -d 'enable Samba protocol via libsmbclient [no]'
complete -c configure-ffmpeg -l enable-libsnappy -d 'enable Snappy compression, needed for hap encoding [no]'
complete -c configure-ffmpeg -l enable-libsoxr -d 'enable Include libsoxr resampling [no]'
complete -c configure-ffmpeg -l enable-libspeex -d 'enable Speex de/encoding via libspeex [no]'
complete -c configure-ffmpeg -l enable-libsrt -d 'enable Haivision SRT protocol via libsrt [no]'
complete -c configure-ffmpeg -l enable-libssh -d 'enable SFTP protocol via libssh [no]'
complete -c configure-ffmpeg -l enable-libsvtav1 -d 'enable AV1 encoding via SVT [no]'
complete -c configure-ffmpeg -l enable-libtensorflow -d 'enable TensorFlow as a DNN module backend'
complete -c configure-ffmpeg -l enable-libtesseract -d 'enable Tesseract, needed for ocr filter [no]'
complete -c configure-ffmpeg -l enable-libtheora -d 'enable Theora encoding via libtheora [no]'
complete -c configure-ffmpeg -l enable-libtls -d 'enable LibreSSL (via libtls), needed for https support'
complete -c configure-ffmpeg -l enable-libtorch -d 'enable Torch as one DNN backend [no]'
complete -c configure-ffmpeg -l enable-libtwolame -d 'enable MP2 encoding via libtwolame [no]'
complete -c configure-ffmpeg -l enable-libuavs3d -d 'enable AVS3 decoding via libuavs3d [no]'
complete -c configure-ffmpeg -l enable-libv4l2 -d 'enable libv4l2/v4l-utils [no]'
complete -c configure-ffmpeg -l enable-libvidstab -d 'enable video stabilization using vid.stab [no]'
complete -c configure-ffmpeg -l enable-libvmaf -d 'enable vmaf filter via libvmaf [no]'
complete -c configure-ffmpeg -l enable-libvo-amrwbenc -d 'enable AMR-WB encoding via libvo-amrwbenc [no]'
complete -c configure-ffmpeg -l enable-libvorbis -d 'enable Vorbis en/decoding via libvorbis,'
complete -c configure-ffmpeg -l enable-libvpx -d 'enable VP8 and VP9 de/encoding via libvpx [no]'
complete -c configure-ffmpeg -l enable-libvvenc -d 'enable H.266/VVC encoding via vvenc [no]'
complete -c configure-ffmpeg -l enable-libwebp -d 'enable WebP encoding via libwebp [no]'
complete -c configure-ffmpeg -l enable-libx264 -d 'enable H.264 encoding via x264 [no]'
complete -c configure-ffmpeg -l enable-libx265 -d 'enable HEVC encoding via x265 [no]'
complete -c configure-ffmpeg -l enable-libxeve -d 'enable EVC encoding via libxeve [no]'
complete -c configure-ffmpeg -l enable-libxevd -d 'enable EVC decoding via libxevd [no]'
complete -c configure-ffmpeg -l enable-libxavs -d 'enable AVS encoding via xavs [no]'
complete -c configure-ffmpeg -l enable-libxavs2 -d 'enable AVS2 encoding via xavs2 [no]'
complete -c configure-ffmpeg -l enable-libxcb -d 'enable X11 grabbing using XCB [autodetect]'
complete -c configure-ffmpeg -l enable-libxcb-shm -d 'enable X11 grabbing shm communication [autodetect]'
complete -c configure-ffmpeg -l enable-libxcb-xfixes -d 'enable X11 grabbing mouse rendering [autodetect]'
complete -c configure-ffmpeg -l enable-libxcb-shape -d 'enable X11 grabbing shape rendering [autodetect]'
complete -c configure-ffmpeg -l enable-libxvid -d 'enable Xvid encoding via xvidcore,'
complete -c configure-ffmpeg -l enable-libxml2 -d 'enable XML parsing using the C library libxml2, needed'
complete -c configure-ffmpeg -l enable-libzimg -d 'enable z.lib, needed for zscale filter [no]'
complete -c configure-ffmpeg -l enable-libzmq -d 'enable message passing via libzmq [no]'
complete -c configure-ffmpeg -l enable-libzvbi -d 'enable teletext support via libzvbi [no]'
complete -c configure-ffmpeg -l enable-lv2 -d 'enable LV2 audio filtering [no]'
complete -c configure-ffmpeg -l disable-lzma -d 'disable lzma [autodetect]'
complete -c configure-ffmpeg -l enable-decklink -d 'enable Blackmagic DeckLink I/O support [no]'
complete -c configure-ffmpeg -l enable-mbedtls -d 'enable mbedTLS, needed for https support'
complete -c configure-ffmpeg -l enable-mediacodec -d 'enable Android MediaCodec support [no]'
complete -c configure-ffmpeg -l enable-mediafoundation -d 'enable encoding via MediaFoundation [auto]'
complete -c configure-ffmpeg -l disable-metal -d 'disable Apple Metal framework [autodetect]'
complete -c configure-ffmpeg -l enable-libmysofa -d 'enable libmysofa, needed for sofalizer filter [no]'
complete -c configure-ffmpeg -l enable-openal -d 'enable OpenAL 1.1 capture support [no]'
complete -c configure-ffmpeg -l enable-opencl -d 'enable OpenCL processing [no]'
complete -c configure-ffmpeg -l enable-opengl -d 'enable OpenGL rendering [no]'
complete -c configure-ffmpeg -l enable-openssl -d 'enable openssl, needed for https support'
complete -c configure-ffmpeg -l enable-pocketsphinx -d 'enable PocketSphinx, needed for asr filter [no]'
complete -c configure-ffmpeg -l disable-sndio -d 'disable sndio support [autodetect]'
complete -c configure-ffmpeg -l disable-schannel -d 'disable SChannel SSP, needed for TLS support on'
complete -c configure-ffmpeg -l disable-sdl2 -d 'disable sdl2 [autodetect]'
complete -c configure-ffmpeg -l disable-securetransport -d 'disable Secure Transport, needed for TLS support'
complete -c configure-ffmpeg -l enable-vapoursynth -d 'enable VapourSynth demuxer [no]'
complete -c configure-ffmpeg -l disable-xlib -d 'disable xlib [autodetect]'
complete -c configure-ffmpeg -l disable-zlib -d 'disable zlib [autodetect]'
complete -c configure-ffmpeg -l disable-amf -d 'disable AMF video encoding code [autodetect]'
complete -c configure-ffmpeg -l disable-audiotoolbox -d 'disable Apple AudioToolbox code [autodetect]'
complete -c configure-ffmpeg -l enable-cuda-nvcc -d 'enable Nvidia CUDA compiler [no]'
complete -c configure-ffmpeg -l disable-cuda-llvm -d 'disable CUDA compilation using clang [autodetect]'
complete -c configure-ffmpeg -l disable-cuvid -d 'disable Nvidia CUVID support [autodetect]'
complete -c configure-ffmpeg -l disable-d3d11va -d 'disable Microsoft Direct3D 11 video acceleration code [autodetect]'
complete -c configure-ffmpeg -l disable-d3d12va -d 'disable Microsoft Direct3D 12 video acceleration code [autodetect]'
complete -c configure-ffmpeg -l disable-dxva2 -d 'disable Microsoft DirectX 9 video acceleration code [autodetect]'
complete -c configure-ffmpeg -l disable-ffnvcodec -d 'disable dynamically linked Nvidia code [autodetect]'
complete -c configure-ffmpeg -l disable-libdrm -d 'disable DRM code (Linux) [autodetect]'
complete -c configure-ffmpeg -l enable-libmfx -d 'enable Intel MediaSDK (AKA Quick Sync Video) code via libmfx [no]'
complete -c configure-ffmpeg -l enable-libvpl -d 'enable Intel oneVPL code via libvpl if libmfx is not used [no]'
complete -c configure-ffmpeg -l enable-libnpp -d 'enable Nvidia Performance Primitives-based code [no]'
complete -c configure-ffmpeg -l enable-mmal -d 'enable Broadcom Multi-Media Abstraction Layer (Raspberry Pi) via MMAL [no]'
complete -c configure-ffmpeg -l disable-nvdec -d 'disable Nvidia video decoding acceleration (via hwaccel) [autodetect]'
complete -c configure-ffmpeg -l disable-nvenc -d 'disable Nvidia video encoding code [autodetect]'
complete -c configure-ffmpeg -l enable-omx -d 'enable OpenMAX IL code [no]'
complete -c configure-ffmpeg -l enable-omx-rpi -d 'enable OpenMAX IL code for Raspberry Pi [no]'
complete -c configure-ffmpeg -l enable-rkmpp -d 'enable Rockchip Media Process Platform code [no]'
complete -c configure-ffmpeg -l disable-v4l2-m2m -d 'disable V4L2 mem2mem code [autodetect]'
complete -c configure-ffmpeg -l disable-vaapi -d 'disable Video Acceleration API (mainly Unix/Intel) code [autodetect]'
complete -c configure-ffmpeg -l disable-vdpau -d 'disable Nvidia Video Decode and Presentation API for Unix code [autodetect]'
complete -c configure-ffmpeg -l disable-videotoolbox -d 'disable VideoToolbox code [autodetect]'
complete -c configure-ffmpeg -l disable-vulkan -d 'disable Vulkan code [autodetect]'
complete -c configure-ffmpeg -l enable-cross-compile -d 'assume a cross-compiler is used'
complete -c configure-ffmpeg -l enable-pic -d 'build position-independent code'
complete -c configure-ffmpeg -l enable-thumb -d 'compile for Thumb instruction set'
complete -c configure-ffmpeg -l disable-symver -d 'disable symbol versioning'
complete -c configure-ffmpeg -l enable-hardcoded-tables -d 'use hardcoded tables instead of runtime generation'
complete -c configure-ffmpeg -l disable-asm -d 'disable all assembly optimizations'
complete -c configure-ffmpeg -l disable-altivec -d 'disable AltiVec optimizations'
complete -c configure-ffmpeg -l disable-vsx -d 'disable VSX optimizations'
complete -c configure-ffmpeg -l disable-power8 -d 'disable POWER8 optimizations'
complete -c configure-ffmpeg -l disable-amd3dnow -d 'disable 3DNow! optimizations'
complete -c configure-ffmpeg -l disable-amd3dnowext -d 'disable 3DNow! extended optimizations'
complete -c configure-ffmpeg -l disable-mmx -d 'disable MMX optimizations'
complete -c configure-ffmpeg -l disable-mmxext -d 'disable MMXEXT optimizations'
complete -c configure-ffmpeg -l disable-sse -d 'disable SSE optimizations'
complete -c configure-ffmpeg -l disable-sse2 -d 'disable SSE2 optimizations'
complete -c configure-ffmpeg -l disable-sse3 -d 'disable SSE3 optimizations'
complete -c configure-ffmpeg -l disable-ssse3 -d 'disable SSSE3 optimizations'
complete -c configure-ffmpeg -l disable-sse4 -d 'disable SSE4 optimizations'
complete -c configure-ffmpeg -l disable-sse42 -d 'disable SSE4.2 optimizations'
complete -c configure-ffmpeg -l disable-avx -d 'disable AVX optimizations'
complete -c configure-ffmpeg -l disable-xop -d 'disable XOP optimizations'
complete -c configure-ffmpeg -l disable-fma3 -d 'disable FMA3 optimizations'
complete -c configure-ffmpeg -l disable-fma4 -d 'disable FMA4 optimizations'
complete -c configure-ffmpeg -l disable-avx2 -d 'disable AVX2 optimizations'
complete -c configure-ffmpeg -l disable-avx512 -d 'disable AVX-512 optimizations'
complete -c configure-ffmpeg -l disable-avx512icl -d 'disable AVX-512ICL optimizations'
complete -c configure-ffmpeg -l disable-aesni -d 'disable AESNI optimizations'
complete -c configure-ffmpeg -l disable-armv5te -d 'disable armv5te optimizations'
complete -c configure-ffmpeg -l disable-armv6 -d 'disable armv6 optimizations'
complete -c configure-ffmpeg -l disable-armv6t2 -d 'disable armv6t2 optimizations'
complete -c configure-ffmpeg -l disable-vfp -d 'disable VFP optimizations'
complete -c configure-ffmpeg -l disable-neon -d 'disable NEON optimizations'
complete -c configure-ffmpeg -l disable-dotprod -d 'disable DOTPROD optimizations'
complete -c configure-ffmpeg -l disable-i8mm -d 'disable I8MM optimizations'
complete -c configure-ffmpeg -l disable-sve -d 'disable SVE optimizations'
complete -c configure-ffmpeg -l disable-sve2 -d 'disable SVE2 optimizations'
complete -c configure-ffmpeg -l disable-inline-asm -d 'disable use of inline assembly'
complete -c configure-ffmpeg -l disable-x86asm -d 'disable use of standalone x86 assembly'
complete -c configure-ffmpeg -l disable-mipsdsp -d 'disable MIPS DSP ASE R1 optimizations'
complete -c configure-ffmpeg -l disable-mipsdspr2 -d 'disable MIPS DSP ASE R2 optimizations'
complete -c configure-ffmpeg -l disable-msa -d 'disable MSA optimizations'
complete -c configure-ffmpeg -l disable-mipsfpu -d 'disable floating point MIPS optimizations'
complete -c configure-ffmpeg -l disable-mmi -d 'disable Loongson MMI optimizations'
complete -c configure-ffmpeg -l disable-lsx -d 'disable Loongson LSX optimizations'
complete -c configure-ffmpeg -l disable-lasx -d 'disable Loongson LASX optimizations'
complete -c configure-ffmpeg -l disable-rvv -d 'disable RISC-V Vector optimizations'
complete -c configure-ffmpeg -l disable-fast-unaligned -d 'consider unaligned accesses slow'
complete -c configure-ffmpeg -l disable-debug -d 'disable debugging symbols'
complete -c configure-ffmpeg -l disable-optimizations -d 'disable compiler optimizations'
complete -c configure-ffmpeg -l enable-extra-warnings -d 'enable more compiler warnings'
complete -c configure-ffmpeg -l disable-stripping -d 'disable stripping of executables and shared libraries'
complete -c configure-ffmpeg -l enable-memory-poisoning -d 'fill heap uninitialized allocated space with arbitrary data'
complete -c configure-ffmpeg -l enable-ftrapv -d 'Trap arithmetic overflows'
complete -c configure-ffmpeg -l enable-neon-clobber-test -d 'check NEON registers for clobbering (should be'
complete -c configure-ffmpeg -l enable-xmm-clobber-test -d 'check XMM registers for clobbering (Win64-only;'
complete -c configure-ffmpeg -l enable-random -d 'randomly enable/disable components'
complete -c configure-ffmpeg -l disable-valgrind-backtrace -d 'do not print a backtrace under Valgrind'
complete -c configure-ffmpeg -l enable-ossfuzz -d 'Enable building fuzzer tool'
complete -c configure-ffmpeg -l enable-linux-perf -d 'enable Linux Performance Monitor API'
complete -c configure-ffmpeg -l enable-macos-kperf -d 'enable macOS kperf (private) API'
complete -c configure-ffmpeg -l disable-large-tests -d 'disable tests that use a large amount of memory'
complete -c configure-ffmpeg -l disable-ptx-compression -d don\'t\ compress\ CUDA\ PTX\ code\ even\ when\ possible
complete -c configure-ffmpeg -l disable-version-tracking -d don\'t\ include\ the\ git/release\ version\ in\ the\ build
