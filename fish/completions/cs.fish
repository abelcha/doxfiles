complete -f -c cs -n __fish_use_subcommand -a disable-ansi-urls -d ''
complete -f -c cs -n __fish_use_subcommand -a set-base-url -d 'Control which GitHub instance you talk to by setting the base URL (eg: GitHub Enterprise)'
complete -f -c cs -n __fish_use_subcommand -a set-default-branch -d 'Set default branch name to use when fetching file contents'
complete -f -c cs -n __fish_use_subcommand -a set-org -d 'Scope all searches to be within a GitHub organization'
complete -f -c cs -n __fish_use_subcommand -a set-token -d 'Set a new personal access token to use for talking to GitHub'
complete -f -c cs -n __fish_use_subcommand -a unset-base-url -d 'unset base url'
complete -f -c cs -n __fish_use_subcommand -a unset-default-branch -d 'Revert to default behavior of querying GitHub for precise branch names'
complete -c cs -s A -l after-context -d 'int    print [num] lines of trailing context after each match'
complete -c cs -l base-url -d 'string      base url for api endpoint (default "https://api.github.com/")'
complete -c cs -s B -l before-context -d 'int   print [num] lines of leading context before each match'
complete -c cs -l config -d 'string        overrides location of the config file'
complete -c cs -l content -d 'print only the text results, nothing else'
complete -c cs -s C -l context -d 'int          print [num] lines of context before and after each match'
complete -c cs -s c -l count -d 'print only a count of matches'
complete -c cs -l dump -d 'dump result structures to stdout'
complete -c cs -s x -l ext -d 'string           scope search by file extension'
complete -c cs -s f -l filename -d 'string      scope search by filename'
complete -c cs -s l -l files-only -d 'print only filenames of matches to stdout'
complete -c cs -l force-color -d print\ ANSI\ sequences\ even\ if\ input\ or\ output\ aren\'t\ standard\ streams
complete -c cs -l full-names-only -d 'print only fully-qualified repo names to stdout (your/repo path/to/README.md)'
complete -c cs -s G -l greppable -d 'print each match with its filename on the same line'
complete -c cs -s h -l help -d 'help for cs'
complete -c cs -l lang -d 'string          scope search with a single language:[lang]'
complete -c cs -l limit -d 'int            limit the number of matches queried and displayed (default 30)'
complete -c cs -s o -l org -d 'string           scope search with a single organization:[org]'
complete -c cs -s p -l path -d 'string          scope search by the path files are in'
complete -c cs -s r -l repo -d 'string          scope search to the given repo, filling in [org] for you if configured'
complete -c cs -l repos-only -d 'print only repository names containing matches to stdout'
complete -c cs -s q -l show-query -d 'show the search terms we would send to GitHub and exit'
complete -c cs -l tabwidth -d 'int         number of spaces to display tabs as (default 2)'
complete -c cs -s u -l url-prefix -d 'print urls instead of repo:file/path'
complete -c cs -s v -l verbose -d 'prints verbose messages to stderr for debugging'
