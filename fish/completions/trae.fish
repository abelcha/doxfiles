complete -c trae -s d -l diff -d '<file> <file>                    Compare two files with each'
complete -c trae -s m -l merge -d '<path1> <path2> <base> <result> Perform a three-way merge by'
complete -c trae -s a -l add -d '<folder>                          Add folder(s) to the last active'
complete -c trae -l remove -d '<folder>                          Remove folder(s) from the last'
complete -c trae -s g -l goto -d '<file:line[:character]>          Open a file at the path on the'
complete -c trae -s n -l new-window -d 'Force to open a new window.'
complete -c trae -s r -l reuse-window -d 'Force to open a file or folder in'
complete -c trae -s w -l wait -d 'Wait for the files to be closed'
complete -c trae -l locale -d '<locale>                          The locale to use (e.g. en-US or'
complete -c trae -l user-data-dir -d '<dir>                      Specifies the directory that user'
complete -c trae -l profile -d '<profileName>                    Opens the provided folder or'
complete -c trae -s h -l help -d 'Print usage.'
complete -c trae -l add-mcp -d '<json>                           Adds a Model Context Protocol'
complete -c trae -l extensions-dir -d '<dir>              Set the root path for extensions.'
complete -c trae -l list-extensions -d 'List the installed extensions.'
complete -c trae -l show-versions -d 'Show versions of installed extensions,'
complete -c trae -l category -d '<category>               Filters installed extensions by provided'
complete -c trae -l install-extension -d '<ext-id | path> Installs or updates an extension. The'
complete -c trae -l pre-release -d 'Installs the pre-release version of the'
complete -c trae -l uninstall-extension -d '<ext-id>      Uninstalls an extension.'
complete -c trae -l update-extensions -d 'Update the installed extensions.'
complete -c trae -l enable-proposed-api -d '<ext-id>      Enables proposed API features for'
complete -c trae -n __fish_no_arguments -s v -l version -d 'Print version.'
complete -c trae -l verbose -d 'Print verbose output (implies'
complete -c trae -l log -d "<level>                           Log level to use. Default is 'info'."
complete -c trae -s s -l status -d 'Print process usage and diagnostics'
complete -c trae -l prof-startup -d 'Run CPU profiler during startup.'
complete -c trae -l disable-extensions -d 'Disable all installed extensions.'
complete -c trae -n __fish_use_subcommand -a a -d 'new window.'
complete -c trae -n __fish_use_subcommand -a --disable-extension -d '<ext-id>            Disable the provided extension. This'
complete -c trae -n __fish_use_subcommand -a option -d 'is not persisted and is'
complete -c trae -n __fish_use_subcommand -a a -d 'new window.'
complete -c trae -n __fish_use_subcommand -a --sync -d '<on | off>                       Turn sync on or off.'
complete -c trae -n __fish_use_subcommand -a --inspect-extensions -d '<port>             Allow debugging and profiling of'
complete -c trae -l inspect-brk-extensions -d '<port>         Allow debugging and profiling of'
complete -c trae -l disable-lcd-text -d 'Disable LCD font rendering.'
complete -c trae -l disable-gpu -d 'Disable GPU hardware acceleration.'
complete -c trae -l disable-chromium-sandbox -d 'Use this option only when there is'
complete -c trae -l locate-shell-integration-path -d '<shell> Print the path to a terminal shell'
complete -c trae -l telemetry -d 'Shows all telemetry events which VS'
