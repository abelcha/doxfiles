complete -c wget2 -s a -l append-output -d "File where messages are appended to, '-' for STDOUT"
complete -c wget2 -s b -l background -d 'Go to background immediately after startup. If no'
complete -c wget2 -s B -l base -d 'Base for relative URLs read from input-file'
complete -c wget2 -l config -d 'Path to initialization file (default: ~/.config/wget/wget2rc)'
complete -c wget2 -s d -l debug -d 'Print debugging messages.(default: off)'
complete -c wget2 -s e -l execute -d 'Wget compatibility option, not needed for Wget'
complete -c wget2 -l force-atom -d 'Treat input file as Atom Feed. (default: off) (NEW!)'
complete -c wget2 -l force-css -d 'Treat input file as CSS. (default: off) (NEW!)'
complete -c wget2 -s F -l force-html -d 'Treat input file as HTML. (default: off)'
complete -c wget2 -l force-metalink -d 'Treat input file as Metalink. (default: off) (NEW!)'
complete -c wget2 -l force-rss -d 'Treat input file as RSS Feed. (default: off) (NEW!)'
complete -c wget2 -l force-sitemap -d 'Treat input file as Sitemap. (default: off) (NEW!)'
complete -c wget2 -l fsync-policy -d 'Use fsync() to wait for data being written to'
complete -c wget2 -s h -l help -d 'Print this help.'
complete -c wget2 -l hyperlink -d 'Enable terminal hyperlink support'
complete -c wget2 -l input-encoding -d 'Character encoding of the file contents read with'
complete -c wget2 -l input-file -d '(default: local encoding)'
complete -c wget2 -s i -l input-file -d 'File where URLs are read from, - for STDIN.'
complete -c wget2 -l local-db -d 'Read or load databases'
complete -c wget2 -s o -l output-file -d 'File where messages are printed to,'
complete -c wget2 -s q -l quiet -d 'Print no messages except debugging messages.'
complete -c wget2 -l stats-dns -d 'Print DNS stats. (default: off)'
complete -c wget2 -l stats-ocsp -d 'Print OCSP stats. (default: off)'
complete -c wget2 -l stats-server -d 'Print server stats. (default: off)'
complete -c wget2 -l stats-site -d 'Print site stats. (default: off)'
complete -c wget2 -l stats-tls -d 'Print TLS stats. (default: off)'
complete -c wget2 -l unlink -d 'Remove files before clobbering. (default: off)'
complete -c wget2 -s v -l verbose -d 'Print more messages. (default: on)'
complete -c wget2 -n __fish_no_arguments -s V -l version -d 'Display the version of Wget and exit.'
complete -c wget2 -s A -l accept -d 'Comma-separated list of file name suffixes or'
complete -c wget2 -l accept-regex -d 'Regex matching accepted URLs.'
complete -c wget2 -l ask-password -d 'Print prompt for password'
complete -c wget2 -l backups -d 'Make backups instead of overwriting/increasing'
complete -c wget2 -l bind-address -d 'Bind to sockets to local address.'
complete -c wget2 -l bind-interface -d 'Bind sockets to the input Network Interface.'
complete -c wget2 -l body-data -d 'Data to be sent in a request.'
complete -c wget2 -l body-file -d 'File with data to be sent in a request.'
complete -c wget2 -l cache -d 'Enabled using of server cache. (default: on)'
complete -c wget2 -l chunk-size -d 'Download large files in multithreaded chunks.'
complete -c wget2 -l clobber -d 'Enable file clobbering. (default: on)'
complete -c wget2 -l connect-timeout -d 'Connect timeout in seconds.'
complete -c wget2 -l content-on-error -d 'Save response body even on error status.'
complete -c wget2 -s c -l continue -d 'Continue download for given files. (default: off)'
complete -c wget2 -l convert-file-only -d 'Convert only filename part of embedded URLs.'
complete -c wget2 -s k -l convert-links -d 'Convert embedded URLs to local URLs.'
complete -c wget2 -l cut-file-get-vars -d 'Cut HTTP GET vars from file names. (default: off)'
complete -c wget2 -l cut-url-get-vars -d 'Cut HTTP GET vars from URLs. (default: off)'
complete -c wget2 -l delete-after -d "Don't save downloaded files. (default: off)"
complete -c wget2 -l dns-cache -d 'Caching of domain name lookups. (default: on)'
complete -c wget2 -l dns-cache-preload -d 'File to be used to preload the DNS cache.'
complete -c wget2 -l dns-timeout -d 'DNS lookup timeout in seconds.'
complete -c wget2 -s D -l domains -d 'Comma-separated list of domains to follow.'
complete -c wget2 -l download-attr -d 'Recognize HTML5 download attributes.'
complete -c wget2 -s X -d --exclude-directories
complete -c wget2 -l exclude-domains -d 'Comma-separated list of domains NOT to follow.'
complete -c wget2 -l filter-mime-type -d 'Specify a list of mime types to be saved or ignored'
complete -c wget2 -l filter-urls -d 'Apply the accept and reject filters on the URL'
complete -c wget2 -l follow-sitemaps -d 'Scan sitemaps found in robots.txt. (default: on)'
complete -c wget2 -l follow-tags -d 'Scan additional tag/attributes for URLs,'
complete -c wget2 -l force-progress -d 'Force progress bar.'
complete -c wget2 -l if-modified-since -d 'Do not send If-Modified-Since header in -N mode.'
complete -c wget2 -l ignore-case -d 'Ignore case when matching files. (default: off)'
complete -c wget2 -l ignore-length -d 'Ignore content-length header field'
complete -c wget2 -l ignore-tags -d 'Ignore tag/attributes for URL scanning,'
complete -c wget2 -s I -d --include-directories
complete -c wget2 -s 4 -l inet4-only -d 'Use IPv4 connections only. (default: off)'
complete -c wget2 -s 6 -l inet6-only -d 'Use IPv6 connections only. (default: off)'
complete -c wget2 -l iri -d "Wget dummy option, you can't switch off"
complete -c wget2 -l keep-extension -d "If file exists: Use pattern 'basename_N.ext'"
complete -c wget2 -s l -l level -d 'Maximum recursion depth. (default: 5)'
complete -c wget2 -l local-encoding -d 'Character encoding of environment and filenames.'
complete -c wget2 -l max-redirect -d 'Max. number of redirections to follow.'
complete -c wget2 -l max-threads -d 'Max. concurrent download threads.'
complete -c wget2 -s m -l mirror -d 'Turn on mirroring options -r -N -l inf'
complete -c wget2 -l netrc -d 'Load credentials from ~/.netrc if not given.'
complete -c wget2 -s O -l output-document -d 'File where downloaded content is written to,'
complete -c wget2 -s p -l page-requisites -d 'Download all necessary files to display a'
complete -c wget2 -l parent -d 'Ascend above parent directory. (default: on)'
complete -c wget2 -l password -d 'Password for Authentication.'
complete -c wget2 -l post-data -d 'Data to be sent in a POST request.'
complete -c wget2 -l post-file -d 'File with data to be sent in a POST request.'
complete -c wget2 -l prefer-family -d 'Prefer IPv4 or IPv6. (default: none)'
complete -c wget2 -l progress -d 'Type of progress bar (bar, none).'
complete -c wget2 -l proxy -d 'Enable support for *_proxy environment variables.'
complete -c wget2 -l random-wait -d 'Wait 0.5 up to 1.5*<--wait> seconds between'
complete -c wget2 -l read-timeout -d 'Read and write timeout in seconds.'
complete -c wget2 -s r -l recursive -d 'Recursive download. (default: off)'
complete -c wget2 -l regex-type -d 'Regular expression type. Possible types are'
complete -c wget2 -s R -l reject -d 'Comma-separated list of file name suffixes or'
complete -c wget2 -l reject-regex -d 'Regex matching rejected URLs.'
complete -c wget2 -l remote-encoding -d 'Character encoding of remote files'
complete -c wget2 -l report-speed -d 'Output bandwidth as TYPE. TYPE can be bytes'
complete -c wget2 -l robots -d 'Respect robots.txt standard for recursive'
complete -c wget2 -l save-content-on -d "Specify a list of response codes that requires it's"
complete -c wget2 -s S -l server-response -d 'Print the server response headers. (default: off)'
complete -c wget2 -s H -l span-hosts -d 'Span hosts that were not given on the'
complete -c wget2 -l spider -d 'Enable web spider mode. (default: off)'
complete -c wget2 -l start-pos -d 'Start downloading at zero-based position, 0 = option disabled. (default: 0)'
complete -c wget2 -l strict-comments -d 'A dummy option. Parsing always works non-strict.'
complete -c wget2 -l tcp-fastopen -d 'Enable TCP Fast Open (TFO). (default: on)'
complete -c wget2 -s T -l timeout -d 'General network timeout in seconds.'
complete -c wget2 -s N -l timestamping -d 'Just retrieve younger files than the local ones.'
complete -c wget2 -s t -l tries -d 'Number of tries for each download. (default 20)'
complete -c wget2 -l trust-server-names -d "On redirection use the server's filename."
complete -c wget2 -l use-askpass -d 'Prompt for a user and password using'
complete -c wget2 -l user -d 'Username for Authentication.'
complete -c wget2 -s w -l wait -d 'Wait number of seconds between downloads'
complete -c wget2 -l waitretry -d 'Wait up to number of seconds after error'
complete -c wget2 -l xattr -d 'Save extended file attributes. (default: off)'
complete -c wget2 -s E -l adjust-extension -d 'Append extension to saved file (.html or .css).'
complete -c wget2 -l auth-no-challenge -d 'send Basic HTTP Authentication before challenge'
complete -c wget2 -s K -l backup-converted -d 'When converting, keep the original file with'
complete -c wget2 -l compression -d 'Customize Accept-Encoding with'
complete -c wget2 -l cookie-suffixes -d 'Load public suffixes from file.'
complete -c wget2 -l cookies -d 'Enable use of cookies. (default: on)'
complete -c wget2 -l default-http-port -d 'Set default port for HTTP. (default: 80)'
complete -c wget2 -l default-https-port -d 'Set default port for HTTPS. (default: 443)'
complete -c wget2 -l default-page -d 'Default file name. (default: index.html)'
complete -c wget2 -l header -d 'Insert input string as a HTTP header in'
complete -c wget2 -l html-extension -d 'Obsoleted by --adjust-extension'
complete -c wget2 -l http-keep-alive -d 'Keep connection open for further requests.'
complete -c wget2 -l http-password -d 'Password for HTTP Authentication.'
complete -c wget2 -l http-proxy -d 'Set HTTP proxy/proxies, overriding environment'
complete -c wget2 -l http-proxy-user -d 'Username for HTTP Proxy Authentication.'
complete -c wget2 -l http-user -d 'Username for HTTP Authentication.'
complete -c wget2 -l limit-rate -d 'Limit rate of download per second, 0 = no limit. (default: 0)'
complete -c wget2 -l load-cookies -d 'Load cookies from file.'
complete -c wget2 -l metalink -d 'Follow a metalink file instead of storing it'
complete -c wget2 -l method -d 'HTTP method to use for request.'
complete -c wget2 -l netrc-file -d 'Set file for login/password to use instead of'
complete -c wget2 -s Q -l quota -d 'Download quota, 0 = no quota. (default: 0)'
complete -c wget2 -l referer -d 'Include Referer: url in HTTP request.'
complete -c wget2 -l retry-connrefused -d 'Consider "connection refused" a transient error.'
complete -c wget2 -l save-cookies -d 'Save cookies to file.'
complete -c wget2 -l save-headers -d 'Save the response headers in front of the response'
complete -c wget2 -s U -l user-agent -d 'HTTP User Agent string.'
complete -c wget2 -l ca-certificate -d 'File with bundle of PEM CA certificates.'
complete -c wget2 -l ca-directory -d 'Directory with PEM CA certificates.'
complete -c wget2 -l certificate -d 'File with client certificate.'
complete -c wget2 -l certificate-type -d 'Certificate type: PEM or DER (known as ASN1).'
complete -c wget2 -l check-certificate -d "Check the server's certificate. (default: on)"
complete -c wget2 -l check-hostname -d "Check the server's certificate's hostname."
complete -c wget2 -l crl-file -d 'File with PEM CRL certificates.'
complete -c wget2 -l dane -d 'Enable DANE certificate checking.(default: off)'
complete -c wget2 -l egd-file -d 'File to be used as socket for random data from'
complete -c wget2 -l hpkp -d 'Use HTTP Public Key Pinning (HPKP). (default: on)'
complete -c wget2 -l hpkp-file -d 'Set file for storing HPKP data'
complete -c wget2 -l hsts -d 'Use HTTP Strict Transport Security (HSTS).'
complete -c wget2 -l hsts-file -d 'Set file for HSTS caching. (default: $XDG_DATA_HOME/wget/.wget-hsts)'
complete -c wget2 -l hsts-preload -d 'Use HTTP Strict Transport Security (HSTS).'
complete -c wget2 -l hsts-preload-file -d 'Set name for the HSTS Preload file (DAFSA format).'
complete -c wget2 -l http2 -d 'Use HTTP/2 protocol if possible. (default: on)'
complete -c wget2 -l http2-only -d "Only use HTTP/2 protocol, error if server doesn't offer it. (default: off)"
complete -c wget2 -l https-enforce -d 'Use secure HTTPS instead of HTTP. Legal types are'
complete -c wget2 -l https-only -d 'Do not follow non-secure URLs. (default: off).'
complete -c wget2 -l https-proxy -d 'Set HTTPS proxy/proxies, overriding environment'
complete -c wget2 -l ocsp -d "Use OCSP server access to verify server's"
complete -c wget2 -l ocsp-date -d 'Check if OCSP response date is too old.'
complete -c wget2 -l ocsp-file -d 'Set file for OCSP chaching.'
complete -c wget2 -l ocsp-nonce -d 'Allow nonce checking when verifying OCSP'
complete -c wget2 -l ocsp-server -d 'Set OCSP server address.'
complete -c wget2 -l ocsp-stapling -d "Use OCSP stapling to verify the server's"
complete -c wget2 -l private-key -d 'File with private key.'
complete -c wget2 -l private-key-type -d 'Type of the private key (PEM or DER).'
complete -c wget2 -l random-file -d 'File to be used as source of random data.'
complete -c wget2 -l secure-protocol -d 'Set protocol to be used (auto, SSLv3, TLSv1, TLSv1_1, TLSv1_2, TLS1_3, PFS).'
complete -c wget2 -l tls-false-start -d 'Enable TLS False Start (needs GnuTLS 3.5+).'
complete -c wget2 -l tls-resume -d 'Enable TLS Session Resumption. (default: off)'
complete -c wget2 -l tls-session-file -d 'Set file for TLS Session caching.'
complete -c wget2 -l cut-dirs -d 'Skip creating given number of directory'
complete -c wget2 -l directories -d 'Create hierarchy of directories when retrieving'
complete -c wget2 -s P -l directory-prefix -d 'Set directory prefix.'
complete -c wget2 -s x -l force-directories -d 'Create hierarchy of directories when not'
complete -c wget2 -l host-directories -d 'Create host directories when retrieving'
complete -c wget2 -l gnupg-homedir -d 'Specify a directory to use as the GnuPG home'
complete -c wget2 -l verify-save-failed -d 'Save target files even when their signatures fail'
complete -c wget2 -s s -l verify-sig -d 'Download .sig file and verify. (default: off)'
complete -c wget2 -l list-plugins -d 'Lists all the plugins in the plugin search paths.'
complete -c wget2 -l local-plugin -d 'Loads a plugin with a given path.'
complete -c wget2 -l plugin -d 'Load a plugin with a given name.'
complete -c wget2 -l plugin-dirs -d 'Specify alternative directories to look'
complete -c wget2 -l plugin-help -d 'Print help message for all loaded plugins'
complete -c wget2 -l plugin-opt -d 'Forward an option to a loaded plugin.'
