# complete -c unar -s output-directory -d '(-o) <string>         The directory to write the contents of the archive to. Defaults to the current directory. If set to a single dash (-), no files will be created,'
# complete -c unar -s force-overwrite -d '(-f)                   Always overwrite files when a file to be unpacked already exists on disk. By default, the program asks the user if possible, otherwise skips the'
# complete -c unar -s force-rename -d '(-r)                      Always rename files when a file to be unpacked already exists on disk.'
# complete -c unar -s force-skip -d '(-s)                        Always skip files when a file to be unpacked already exists on disk.'
# complete -c unar -s force-directory -d '(-d)                   Always create a containing directory for the contents of the unpacked archive. By default, a directory is created if there is more than one'
# complete -c unar -s no-directory -d '(-D)                      Never create a containing directory for the contents of the unpacked archive.'
# complete -c unar -s password -d '(-p) <string>                 The password to use for decrypting protected archives.'
# complete -c unar -s encoding -d '(-e) <encoding name>          The encoding to use for filenames in the archive, when it is not known. If not specified, the program attempts to auto-detect the encoding used.'
# complete -c unar -s password-encoding -d '(-E) <name>          The encoding to use for the password for the archive, when it is not known. If not specified, then either the encoding given by the -encoding'
# complete -c unar -s indexes -d '(-i)                           Instead of specifying the files to unpack as filenames or wildcard patterns, specify them as indexes, as output by lsar.'
# complete -c unar -s no-recursion -d '(-nr)                     Do not attempt to extract archives contained in other archives. For instance, when unpacking a .tar.gz file, only unpack the .gz file and not its'
# complete -c unar -s copy-time -d '(-t)                         Copy the file modification time from the archive file to the containing directory, if one is created.'
# complete -c unar -s no-quarantine -d '(-nq)                    Do not copy Finder quarantine metadata from the archive to the extracted files.'
# complete -c unar -s forks -d '(-k) <fork|visible|hidden|skip>  How to handle Mac OS resource forks. "fork" creates regular resource forks, "visible" creates AppleDouble files with the extension ".rsrc",'
# complete -c unar -s quiet -d '(-q)                             Run in quiet mode.'
# complete -c unar -s version -d '(-v)                           Print version and exit.'
# complete -c unar -s help -d '(-h)                              Display this information.'

complete -c unar -s o -o output-directory -r -d 'Directory for writing archive contents'
complete -c unar -s f -o force-overwrite -d 'Always overwrite existing files'
complete -c unar -s r -o force-rename -d 'Always rename files when existing'
complete -c unar -s s -o force-skip -d 'Always skip existing files'
complete -c unar -s d -o force-directory -d 'Always create containing directory'
complete -c unar -s D -o no-directory -d 'Never create a containing directory'
complete -c unar -s p -o password -x -d 'Password for decrypting protected archives'
complete -c unar -s e -o encoding -x -d 'Encoding for filenames in the archive'
complete -c unar -s E -o password-encoding -x -d 'Encoding for the archive password'
complete -c unar -s i -o indexes -d 'Specify files to list by index'
complete -c unar -o nr -o no-recursion -d 'Do not list contents of nested archives'
complete -c unar -s t -o copy-time -d 'Copy modification time from archive'
complete -c unar -o nq -o no-quarantine -d 'Do not copy Finder quarantine metadata'
complete -c unar -s k -o forks -xa 'fork visible hidden skip' -d 'How to handle macOS resource forks'
complete -c unar -s q -o quiet -d 'Run quietly'
complete -c unar -s v -o version -d 'Print version'
complete -c unar -s h -o help -d 'Display help'
