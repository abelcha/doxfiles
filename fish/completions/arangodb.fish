#string replace -a -- {} arangodb  {} --help-all
complete -f -c arangodb -n __fish_use_subcommand -a abort -d 'Abort an operation'
complete -f -c arangodb -n __fish_use_subcommand -a admin -d ''
complete -f -c arangodb -n __fish_use_subcommand -a create -d 'Create certificates'
complete -f -c arangodb -n __fish_use_subcommand -a remove -d 'Remove something'
complete -f -c arangodb -n __fish_use_subcommand -a retry -d 'Retry an operation'
complete -f -c arangodb -n __fish_use_subcommand -a start -d 'Start the ArangoDB starter in the background'
complete -f -c arangodb -n __fish_use_subcommand -a stop -d 'Stop a ArangoDB starter'
complete -f -c arangodb -n __fish_use_subcommand -a upgrade -d 'Upgrade an ArangoDB deployment to a new version'
complete -f -c arangodb -n __fish_use_subcommand -a version -d 'Show ArangoDB version'
complete -c arangodb -l auth.jwt-secret -d 'string                    name of a plain text file containing a JWT secret used for server authentication'
complete -c arangodb -l cluster.advertised-endpoint -d 'string        An external endpoint for the servers started by this Starter'
complete -c arangodb -l cluster.agency-size -d 'int                   Number of agents in the cluster (default 3)'
complete -c arangodb -l cluster.start-agent -d 'bools                 should an agent instance be started (default [])'
complete -c arangodb -l cluster.start-coordinator -d 'bools           should a coordinator instance be started (default [])'
complete -c arangodb -l cluster.start-dbserver -d 'bools              should a dbserver instance be started (default [])'
complete -c arangodb -l cluster.start-single -d 'bools                should an active-failover single server instance be started (default [])'
complete -c arangodb -s c -l configuration -d 'string                      Configuration file path (default "arangodb-starter.conf")'
complete -c arangodb -l docker.container -d 'string                   name of the docker container that is running this process'
complete -c arangodb -l docker.endpoint -d 'string                    Endpoint used to reach the docker daemon (default "unix:///var/run/docker.sock")'
complete -c arangodb -l docker.gc-delay -d 'duration                  Delay before stopped containers are garbage collected (default 10m0s)'
complete -c arangodb -l docker.image -d 'string                       name of the Docker image to use to launch arangod instances (leave empty to avoid using docker)'
complete -c arangodb -l docker.imagePullPolicy -d 'string             pull docker image from docker hub (Always|IfNotPresent|Never)'
complete -c arangodb -l docker.net-host -d 'Run containers with --net=host (DEPRECATED: use --docker.net-mode=host instead)'
complete -c arangodb -l docker.net-mode -d 'string                    Run containers with --net=<value>'
complete -c arangodb -l docker.privileged -d 'Run containers with --privileged'
complete -c arangodb -l docker.sync-image -d 'string                  name of the Docker image to use to launch arangosync instances'
complete -c arangodb -l docker.tty -d 'Run containers with TTY enabled (default true)'
complete -c arangodb -l docker.user -d 'string                        use the given name as user to run the Docker container'
complete -c arangodb -s h -l help -d 'help for arangodb'
complete -c arangodb -l log.color -d 'Colorize the log output (default true)'
complete -c arangodb -l log.console -d 'Send log output to console (default true)'
complete -c arangodb -l log.dir -d 'string                            Custom log file directory.'
complete -c arangodb -l log.file -d 'Send log output to file (default true)'
complete -c arangodb -l log.rotate-files-to-keep -d 'int              Number of files to keep when rotating log files (default 5)'
complete -c arangodb -l log.rotate-interval -d 'duration              Time between log rotations (0 disables log rotation) (default 24h0m0s)'
complete -c arangodb -l log.time-format -d string\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Time\ format\ to\ use\ in\ logs.\ Possible\ values:\ \'local-datestring\'\ \(default\),\ \'utc-datestring\'\ \(default\ \"local-datestring\"\)
complete -c arangodb -l log.verbose -d 'Turn on debug logging'
complete -c arangodb -l rocksdb.encryption-key-generator -d 'string   Path to program. The output of this program will be used as key for RocksDB encryption. (Enterprise Edition)'
complete -c arangodb -l rocksdb.encryption-keyfile -d 'string         Key file used for RocksDB encryption. (Enterprise Edition 3.2 and up)'
complete -c arangodb -l server.arangod -d 'string                     Path of arangod (default "/usr/sbin/arangod")'
complete -c arangodb -l server.arangosync -d 'string                  Path of arangosync (default "/usr/sbin/arangosync")'
complete -c arangodb -l server.js-dir -d 'string                      Path of arango JS folder (default "/usr/share/arangodb3/js")'
complete -c arangodb -l server.rr -d 'string                          Path of rr'
complete -c arangodb -l server.storage-engine -d 'string              Type of storage engine to use (mmfiles|rocksdb) (3.2 and up)'
complete -c arangodb -l server.threads -d 'int                        Adjust server.threads of each server'
complete -c arangodb -l server.use-local-bin -d 'If true, starter will try searching for binaries in local directory first'
complete -c arangodb -l ssl.auto-key -d 'If set, a self-signed certificate will be created and used as --ssl.keyfile'
complete -c arangodb -l ssl.auto-organization -d 'string              Organization name put into self-signed certificate. See --ssl.auto-key (default "ArangoDB")'
complete -c arangodb -l ssl.auto-server-name -d 'string               Server name put into self-signed certificate. See --ssl.auto-key'
complete -c arangodb -l ssl.cafile -d 'string                         path of a PEM encoded file containing a CA certificate used for client authentication'
complete -c arangodb -l ssl.keyfile -d 'string                        path of a PEM encoded file containing a server certificate + private key'
complete -c arangodb -l starter.address -d 'string                    address under which this server is reachable, needed for running in docker or in single mode'
complete -c arangodb -l starter.data-dir -d 'string                   directory to store all data the starter generates (and holds actual database directories) (default ".")'
complete -c arangodb -l starter.debug-cluster -d 'If set, log more information to debug a cluster'
complete -c arangodb -l starter.disable-ipv6 -d 'If set, no IPv6 notation will be used. Use this only when IPv6 address family is disabled'
complete -c arangodb -l starter.host -d 'string                       address used to bind the starter to (default "0.0.0.0")'
complete -c arangodb -l starter.id -d 'string                         Unique identifier of this peer'
complete -c arangodb -l starter.instance-up-timeout -d 'duration      Timeout to wait for an instance start (default 5m0s)'
complete -c arangodb -l starter.join -d 'strings                      join a cluster with master at given address'
complete -c arangodb -l starter.local -d 'If set, local slaves will be started to create a machine local (test) cluster'
complete -c arangodb -l starter.mode -d 'string                       Set the mode of operation to use (cluster|single|activefailover) (default "cluster")'
complete -c arangodb -l starter.port -d int\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Port\ to\ listen\ on\ for\ other\ arangodb\'s\ to\ join\ \(default\ 8528\)
complete -c arangodb -l starter.sync -d 'If set, the starter will also start arangosync instances'
complete -c arangodb -l starter.unique-port-offsets -d 'If set, all peers will get a unique port offset. If false (default) only portOffset+peerAddress pairs will be unique.'
complete -c arangodb -l sync.master.jwt-secret -d 'string             File containing JWT secret used to access the Sync Master (from Sync Worker)'
complete -c arangodb -l sync.monitoring.token -d 'string              Bearer token used to access ArangoSync monitoring endpoints'
complete -c arangodb -l sync.mq.type -d 'string                       Type of message queue used by the Sync Master (default "direct")'
complete -c arangodb -l sync.server.client-cafile -d 'string          CA Certificate used for client certificate verification'
complete -c arangodb -l sync.server.keyfile -d 'string                TLS keyfile of local sync master'
complete -c arangodb -l sync.start-master -d 'bools                   should an ArangoSync master instance be started (only relevant when starter.sync is enabled) (default [])'
complete -c arangodb -l sync.start-worker -d 'bools                   should an ArangoSync worker instance be started (only relevant when starter.sync is enabled) (default [])'
complete -c arangodb -n __fish_no_arguments -l version -d 'If set, show version and exit'
