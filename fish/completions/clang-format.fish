complete -c clang-format -l Werror -d 'If set, changes formatting warnings to errors'
complete -c clang-format -l Wno-error -d "<value>  If set don't error out on the specified warning type."
complete -c clang-format -l assume-filename -d '<string>  Set filename used to determine the language and to find'
complete -c clang-format -l cursor -d '<uint>  The position of the cursor when invoking'
complete -c clang-format -l dry-run -d 'If set, do not actually make the formatting changes'
complete -c clang-format -l dump-config -d 'Dump configuration options to stdout and exit.'
complete -c clang-format -l fallback-style -d '<string>  The name of the predefined style used as a'
complete -c clang-format -l ferror-limit -d '<uint>  Set the maximum number of clang-format errors to emit'
complete -c clang-format -l files -d '<filename>  A file containing a list of files to process, one per line.'
complete -c clang-format -l help -d 'Display available options (--help-hidden for more)'
complete -c clang-format -s i -d 'Inplace edit <file>s, if specified.'
complete -c clang-format -l length -d '<uint>  Format a range of this length (in bytes).'
complete -c clang-format -l lines -d '<string>  <start line>:<end line> - format a range of'
complete -c clang-format -s n -d 'Alias for --dry-run'
complete -c clang-format -l offset -d '<uint>  Format a range starting at this byte offset.'
complete -c clang-format -l output-replacements-xml -d 'Output replacements as XML.'
complete -c clang-format -l qualifier-alignment -d '<string> - If set, overrides the qualifier alignment style'
complete -c clang-format -l sort-includes -d 'If set, overrides the include sorting behavior'
complete -c clang-format -l style -d '<string>  Set coding style. <string> can be:'
complete -c clang-format -l verbose -d 'If set, shows the list of processed files'
complete -c clang-format -n __fish_no_arguments -l version -d 'Display the version of this program'
