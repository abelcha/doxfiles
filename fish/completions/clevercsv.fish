complete -f -c clevercsv -n __fish_use_subcommand -a help -d 'Display help information'
complete -c clevercsv -n '__fish_seen_subcommand_from help' -s h -l help -d 'show this help message and exit'
complete -f -c clevercsv -n __fish_use_subcommand -a detect -d 'Detect the dialect of a CSV file'
complete -c clevercsv -n '__fish_seen_subcommand_from detect' -s h -l help -d 'show this help message and exit'
complete -c clevercsv -n '__fish_seen_subcommand_from detect' -s c -l consistency -d 'Only use the consistency measure for detection.'
complete -c clevercsv -n '__fish_seen_subcommand_from detect' -s e -d 'ENCODING, --encoding ENCODING'
complete -c clevercsv -n '__fish_seen_subcommand_from detect' -s n -d 'NUM_CHARS, --num-chars NUM_CHARS'
complete -c clevercsv -n '__fish_seen_subcommand_from detect' -s p -l plain -d 'Print the components of the dialect on separate lines'
complete -c clevercsv -n '__fish_seen_subcommand_from detect' -s j -l json -d 'Print the components of the dialect as a JSON object'
complete -c clevercsv -n '__fish_seen_subcommand_from detect' -l no-skip -d Don\'t\ skip\ type\ detection\ for\ dialects\ with\ a\ low
complete -c clevercsv -n '__fish_seen_subcommand_from detect' -l add-runtime -d 'Add the runtime of the detection to the detection'
complete -f -c clevercsv -n __fish_use_subcommand -a standardize -d 'Convert a CSV file to one that conforms to RFC-4180'
complete -c clevercsv -n '__fish_seen_subcommand_from standardize' -s h -l help -d 'show this help message and exit'
complete -c clevercsv -n '__fish_seen_subcommand_from standardize' -s e -d 'ENCODING, --encoding ENCODING'
complete -c clevercsv -n '__fish_seen_subcommand_from standardize' -s i -l in-place -d 'Standardize and overwrite the input file(s)'
complete -c clevercsv -n '__fish_seen_subcommand_from standardize' -s n -d 'NUM_CHARS, --num-chars NUM_CHARS'
complete -c clevercsv -n '__fish_seen_subcommand_from standardize' -s o -d 'OUTPUT, --output OUTPUT'
complete -c clevercsv -n '__fish_seen_subcommand_from standardize' -s t -l transpose -d 'Transpose the columns of the input file(s) before'
complete -f -c clevercsv -n __fish_use_subcommand -a code -d 'Generate Python code to import a CSV file'
complete -c clevercsv -n '__fish_seen_subcommand_from code' -s h -l help -d 'show this help message and exit'
complete -c clevercsv -n '__fish_seen_subcommand_from code' -s e -d 'ENCODING, --encoding ENCODING'
complete -c clevercsv -n '__fish_seen_subcommand_from code' -s n -d 'NUM_CHARS, --num-chars NUM_CHARS'
complete -c clevercsv -n '__fish_seen_subcommand_from code' -s p -l pandas -d 'Write code that uses a Pandas DataFrame'
complete -f -c clevercsv -n __fish_use_subcommand -a explore -d 'Explore the CSV file in an interactive Python shell'
complete -c clevercsv -n '__fish_seen_subcommand_from explore' -s h -l help -d 'show this help message and exit'
complete -c clevercsv -n '__fish_seen_subcommand_from explore' -s e -d 'ENCODING, --encoding ENCODING'
complete -c clevercsv -n '__fish_seen_subcommand_from explore' -s n -d 'NUM_CHARS, --num-chars NUM_CHARS'
complete -c clevercsv -n '__fish_seen_subcommand_from explore' -s p -l pandas -d 'Read the file into a Pandas DataFrame'
