complete -c prettier -s c -l check -d 'Check if the given files are formatted, print a human-friendly summary'
complete -c prettier -s l -l list-different -d Print\ the\ names\ of\ files\ that\ are\ different\ from\ Prettier\'s\ formatting\ \(see\ also\ --check\).
complete -c prettier -s w -l write -d 'Edit files in-place. (Beware!)'
complete -c prettier -l arrow-parens -d '<always|avoid>'
complete -c prettier -l bracket-same-line -d 'Put > of opening tags on the last line instead of on a new line.'
complete -c prettier -l no-bracket-spacing -d 'Do not print spaces between brackets.'
complete -c prettier -l embedded-language-formatting -d '<auto|off>'
complete -c prettier -l end-of-line -d '<lf|crlf|cr|auto>'
complete -c prettier -l html-whitespace-sensitivity -d '<css|strict|ignore>'
complete -c prettier -l jsx-single-quote -d 'Use single quotes in JSX.'
complete -c prettier -l parser -d '<flow|babel|babel-flow|babel-ts|typescript|acorn|espree|meriyah|css|less|scss|json|json5|json-stringify|graphql|markdown|mdx|vue|yaml|glimmer|html|angular|lwc>'
complete -c prettier -l print-width -d '<int>      The line length where Prettier will try wrap.'
complete -c prettier -l prose-wrap -d '<always|never|preserve>'
complete -c prettier -l quote-props -d '<as-needed|consistent|preserve>'
complete -c prettier -l no-semi -d 'Do not print semicolons, except at the beginning of lines which may need them.'
complete -c prettier -l single-quote -d 'Use single quotes instead of double quotes.'
complete -c prettier -l tab-width -d '<int>        Number of spaces per indentation level.'
complete -c prettier -l trailing-comma -d '<es5|none|all>'
complete -c prettier -l use-tabs -d 'Indent with tabs instead of spaces.'
complete -c prettier -l config -d '<path>          Path to a Prettier configuration file (.prettierrc, package.json, prettier.config.js).'
complete -c prettier -l no-config -d 'Do not look for a configuration file.'
complete -c prettier -l config-precedence -d '<cli-override|file-override|prefer-file>'
complete -c prettier -l no-editorconfig -d Don\'t\ take\ .editorconfig\ into\ account\ when\ parsing\ configuration.
complete -c prettier -l find-config-path -d '<path>'
complete -c prettier -l ignore-path -d '<path>     Path to a file with patterns describing files to ignore.'
complete -c prettier -l plugin -d '<path>          Add a plugin. Multiple plugins can be passed as separate `--plugin`s.'
complete -c prettier -l plugin-search-dir -d '<path>'
complete -c prettier -l with-node-modules -d Process\ files\ inside\ \'node_modules\'\ directory.
complete -c prettier -l cursor-offset -d '<int>    Print (to stderr) where a cursor at the given position would move to after formatting.'
complete -c prettier -l range-end -d '<int>        Format code ending at a given character offset (exclusive).'
complete -c prettier -l range-start -d '<int>      Format code starting at a given character offset.'
complete -c prettier -l cache -d 'Only format changed files. Cannot use with --stdin-filepath.'
complete -c prettier -l cache-location -d '<path>  Path to the cache file.'
complete -c prettier -l cache-strategy -d '<metadata|content>'
complete -c prettier -l no-color -d 'Do not colorize error messages.'
complete -c prettier -l file-info -d '<path>       Extract the following info (as JSON) for a given file path. Reported fields:'
complete -c prettier -s h -l help -d '<flag>        Show CLI usage, or details about the given flag.'
complete -c prettier -s u -l ignore-unknown -d 'Ignore unknown files.'
complete -c prettier -l insert-pragma -d Insert\ @format\ pragma\ into\ file\'s\ first\ docblock\ comment.
complete -c prettier -l loglevel -d '<silent|error|warn|log|debug>'
complete -c prettier -l no-plugin-search -d 'Disable plugin autoloading.'
complete -c prettier -l require-pragma -d Require\ either\ \'@prettier\'\ or\ \'@format\'\ to\ be\ present\ in\ the\ file\'s\ first\ docblock\ comment
complete -c prettier -l stdin-filepath -d '<path>  Path to the file to pretend that stdin comes from.'
complete -c prettier -l support-info -d 'Print support information as JSON.'
complete -c prettier -n __fish_no_arguments -s v -l version -d 'Print Prettier version.'
