complete -c pbxproj -n __fish_no_arguments -s v -l version -d 'Shows version of pbxproj running'
complete -c pbxproj -s h -l help -d 'This message'
complete -f -c pbxproj -n __fish_use_subcommand -a show -d 'Displays information about the project targets'
complete -c pbxproj -n '__fish_seen_subcommand_from show' -s h -l help -d 'This message.'
complete -c pbxproj -n '__fish_seen_subcommand_from show' -s t -l target -d '<target>           Target name to be modified. If there is no target specified, all targets are used.'
complete -c pbxproj -n '__fish_seen_subcommand_from show' -s b -l backup -d 'Creates a backup before start processing the command.'
complete -c pbxproj -n '__fish_seen_subcommand_from show' -s s -l source-files -d 'Show the source files attached to the target'
complete -c pbxproj -n '__fish_seen_subcommand_from show' -s r -l resource-files -d 'Show the resource files attached to the target'
complete -c pbxproj -n '__fish_seen_subcommand_from show' -s f -l framework-files -d 'Show the library files attached to the target'
complete -c pbxproj -n '__fish_seen_subcommand_from show' -s H -l header-files -d 'Show the header files attached to the target'
complete -c pbxproj -n '__fish_seen_subcommand_from show' -s c -l configurations -d 'Show the configurations attached to the target'
complete -c pbxproj -n '__fish_seen_subcommand_from show' -s B -l build-phase-files -d '<type>  Show the files associated to the build phase of the given type.'
complete -f -c pbxproj -n __fish_use_subcommand -a file -d 'Manipulates files on a project'
complete -c pbxproj -n '__fish_seen_subcommand_from file' -s h -l help -d 'This message.'
complete -c pbxproj -n '__fish_seen_subcommand_from file' -l tree -d '<tree>                  Tree to add the file relative to. Available options: <absolute>, <group>,'
complete -c pbxproj -n '__fish_seen_subcommand_from file' -s t -l target -d '<target>          Target name(s) to be modified. If there is no target specified, all targets are'
complete -c pbxproj -n '__fish_seen_subcommand_from file' -l parent -d '<parent>              Parent to use when adding the file (uses project root if not given).'
complete -c pbxproj -n '__fish_seen_subcommand_from file' -s b -l backup -d 'Creates a backup before start processing the command.'
complete -c pbxproj -n '__fish_seen_subcommand_from file' -s D -l delete -d 'Delete the file.'
complete -c pbxproj -n '__fish_seen_subcommand_from file' -s w -l weak -d 'Add the weak flag when libraries or frameworks are added. Linking optional.'
complete -c pbxproj -n '__fish_seen_subcommand_from file' -s E -l no-embed -d 'Do not embed frameworks when added.'
complete -c pbxproj -n '__fish_seen_subcommand_from file' -s s -l sign-on-copy -d 'Sign frameworks when copied/embedded.'
complete -c pbxproj -n '__fish_seen_subcommand_from file' -s i -l ignore-unknown-types -d 'Ignore unknown file types when added.'
complete -c pbxproj -n '__fish_seen_subcommand_from file' -s C -l no-create-build-files -d 'Do not create build file phases when adding a file.'
complete -c pbxproj -n '__fish_seen_subcommand_from file' -s H -l header-scope -d '<scope>     Add header file using the given scope. Available options: public or private, project.'
complete -f -c pbxproj -n __fish_use_subcommand -a flag -d 'Manipulates compilation flags on the project'
complete -c pbxproj -n '__fish_seen_subcommand_from flag' -s h -l help -d 'This message.'
complete -c pbxproj -n '__fish_seen_subcommand_from flag' -s t -l target -d '<target>                   Target name(s) to be modified. If there is no target specified, all targets'
complete -c pbxproj -n '__fish_seen_subcommand_from flag' -s b -l backup -d 'Creates a backup before start processing the command.'
complete -c pbxproj -n '__fish_seen_subcommand_from flag' -s c -l configuration -d '<configuration>     Configuration name to modify the flags. If no configuration name is'
complete -c pbxproj -n '__fish_seen_subcommand_from flag' -s D -l delete -d "Removes the given flag_value's from the pairing flag_name."
complete -f -c pbxproj -n __fish_use_subcommand -a folder -d 'Manipulates folders or groups on a project'
complete -c pbxproj -n '__fish_seen_subcommand_from folder' -s h -l help -d 'This message.'
complete -c pbxproj -n '__fish_seen_subcommand_from folder' -s t -l target -d '<target>           Target name(s) to be modified. If there is no target specified, all targets are'
complete -c pbxproj -n '__fish_seen_subcommand_from folder' -s b -l backup -d 'Creates a backup before start processing the command.'
complete -c pbxproj -n '__fish_seen_subcommand_from folder' -s D -l delete -d 'Delete the file.'
complete -c pbxproj -n '__fish_seen_subcommand_from folder' -l tree -d '<tree>                   Tree to add the file relative to. Available options: <absolute>, <group>,'
complete -c pbxproj -n '__fish_seen_subcommand_from folder' -s e -l exclude -d '<regex>           Pattern to exclude during the insertion of a folder. The pattern applies to file'
complete -c pbxproj -n '__fish_seen_subcommand_from folder' -s r -l recursive -d 'Add folders and files recursively.'
complete -c pbxproj -n '__fish_seen_subcommand_from folder' -s G -l no-create-groups -d 'Add the folder as a file reference instead of creating group(s).'
complete -c pbxproj -n '__fish_seen_subcommand_from folder' -s w -l weak -d 'Add the weak flag when libraries or frameworks are added. Linking optional.'
complete -c pbxproj -n '__fish_seen_subcommand_from folder' -s E -l no-embed -d 'Do not embed frameworks when added.'
complete -c pbxproj -n '__fish_seen_subcommand_from folder' -s s -l sign-on-copy -d 'Sign frameworks when copied/embedded.'
complete -c pbxproj -n '__fish_seen_subcommand_from folder' -s i -l ignore-unknown-types -d 'Ignore unknown file types when added.'
complete -c pbxproj -n '__fish_seen_subcommand_from folder' -s C -l no-create-build-files -d 'Do not create build file phases when adding a file.'
complete -c pbxproj -n '__fish_seen_subcommand_from folder' -s H -l header-scope -d '<scope>      Add header file using the given scope. Available options: public or private, project.'
complete -c pbxproj -n '__fish_seen_subcommand_from show' -s h -l help -d 'This message.'
complete -c pbxproj -n '__fish_seen_subcommand_from show' -s t -l target -d '<target>           Target name to be modified. If there is no target specified, all targets are used.'
complete -c pbxproj -n '__fish_seen_subcommand_from show' -s b -l backup -d 'Creates a backup before start processing the command.'
complete -c pbxproj -n '__fish_seen_subcommand_from show' -s s -l source-files -d 'Show the source files attached to the target'
complete -c pbxproj -n '__fish_seen_subcommand_from show' -s r -l resource-files -d 'Show the resource files attached to the target'
complete -c pbxproj -n '__fish_seen_subcommand_from show' -s f -l framework-files -d 'Show the library files attached to the target'
complete -c pbxproj -n '__fish_seen_subcommand_from show' -s H -l header-files -d 'Show the header files attached to the target'
complete -c pbxproj -n '__fish_seen_subcommand_from show' -s c -l configurations -d 'Show the configurations attached to the target'
complete -c pbxproj -n '__fish_seen_subcommand_from show' -s B -l build-phase-files -d '<type>  Show the files associated to the build phase of the given type.'
complete -c pbxproj -n '__fish_seen_subcommand_from file' -s h -l help -d 'This message.'
complete -c pbxproj -n '__fish_seen_subcommand_from file' -l tree -d '<tree>                  Tree to add the file relative to. Available options: <absolute>, <group>,'
complete -c pbxproj -n '__fish_seen_subcommand_from file' -s t -l target -d '<target>          Target name(s) to be modified. If there is no target specified, all targets are'
complete -c pbxproj -n '__fish_seen_subcommand_from file' -l parent -d '<parent>              Parent to use when adding the file (uses project root if not given).'
complete -c pbxproj -n '__fish_seen_subcommand_from file' -s b -l backup -d 'Creates a backup before start processing the command.'
complete -c pbxproj -n '__fish_seen_subcommand_from file' -s D -l delete -d 'Delete the file.'
complete -c pbxproj -n '__fish_seen_subcommand_from file' -s w -l weak -d 'Add the weak flag when libraries or frameworks are added. Linking optional.'
complete -c pbxproj -n '__fish_seen_subcommand_from file' -s E -l no-embed -d 'Do not embed frameworks when added.'
complete -c pbxproj -n '__fish_seen_subcommand_from file' -s s -l sign-on-copy -d 'Sign frameworks when copied/embedded.'
complete -c pbxproj -n '__fish_seen_subcommand_from file' -s i -l ignore-unknown-types -d 'Ignore unknown file types when added.'
complete -c pbxproj -n '__fish_seen_subcommand_from file' -s C -l no-create-build-files -d 'Do not create build file phases when adding a file.'
complete -c pbxproj -n '__fish_seen_subcommand_from file' -s H -l header-scope -d '<scope>     Add header file using the given scope. Available options: public or private, project.'
complete -c pbxproj -n '__fish_seen_subcommand_from flag' -s h -l help -d 'This message.'
complete -c pbxproj -n '__fish_seen_subcommand_from flag' -s t -l target -d '<target>                   Target name(s) to be modified. If there is no target specified, all targets'
complete -c pbxproj -n '__fish_seen_subcommand_from flag' -s b -l backup -d 'Creates a backup before start processing the command.'
complete -c pbxproj -n '__fish_seen_subcommand_from flag' -s c -l configuration -d '<configuration>     Configuration name to modify the flags. If no configuration name is'
complete -c pbxproj -n '__fish_seen_subcommand_from flag' -s D -l delete -d "Removes the given flag_value's from the pairing flag_name."
complete -c pbxproj -n '__fish_seen_subcommand_from folder' -s h -l help -d 'This message.'
complete -c pbxproj -n '__fish_seen_subcommand_from folder' -s t -l target -d '<target>           Target name(s) to be modified. If there is no target specified, all targets are'
complete -c pbxproj -n '__fish_seen_subcommand_from folder' -s b -l backup -d 'Creates a backup before start processing the command.'
complete -c pbxproj -n '__fish_seen_subcommand_from folder' -s D -l delete -d 'Delete the file.'
complete -c pbxproj -n '__fish_seen_subcommand_from folder' -l tree -d '<tree>                   Tree to add the file relative to. Available options: <absolute>, <group>,'
complete -c pbxproj -n '__fish_seen_subcommand_from folder' -s e -l exclude -d '<regex>           Pattern to exclude during the insertion of a folder. The pattern applies to file'
complete -c pbxproj -n '__fish_seen_subcommand_from folder' -s r -l recursive -d 'Add folders and files recursively.'
complete -c pbxproj -n '__fish_seen_subcommand_from folder' -s G -l no-create-groups -d 'Add the folder as a file reference instead of creating group(s).'
complete -c pbxproj -n '__fish_seen_subcommand_from folder' -s w -l weak -d 'Add the weak flag when libraries or frameworks are added. Linking optional.'
complete -c pbxproj -n '__fish_seen_subcommand_from folder' -s E -l no-embed -d 'Do not embed frameworks when added.'
complete -c pbxproj -n '__fish_seen_subcommand_from folder' -s s -l sign-on-copy -d 'Sign frameworks when copied/embedded.'
complete -c pbxproj -n '__fish_seen_subcommand_from folder' -s i -l ignore-unknown-types -d 'Ignore unknown file types when added.'
complete -c pbxproj -n '__fish_seen_subcommand_from folder' -s C -l no-create-build-files -d 'Do not create build file phases when adding a file.'
complete -c pbxproj -n '__fish_seen_subcommand_from folder' -s H -l header-scope -d '<scope>      Add header file using the given scope. Available options: public or private, project.'
