{
    "sourceFile": "helpers/event_providers/ram_load/xx.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1716811331493,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1716811331493,
            "name": "Commit-0",
            "content": "\nimport matplotlib.pyplot as plt\nimport polars \n\n\n# Step 1: Load and Parse Data\nfile_path = '~/datasets/history.txt'\ndata = polars.read_csv(file_path, has_header=False, separator='\\t', columns=['datetime'])\n\n# Parse datetime\ndata = data.with_column(polars.col('datetime').str.strptime(polars.Datetime, format=\"%Y-%m-%d %H:%M:%S\"))\n\n# Step 2: Aggregate Activity by Hour\ndata = data.with_column(polars.col('datetime').dt.truncate('1h').alias('hour'))\nactivity_by_hour = data.groupby('hour').agg(polars.count()).rename({'count': 'activity'})\n\n# Step 3: Define Awake and Sleep Periods\n# Assuming inactivity for more than 2 hours indicates sleep\nactivity_by_hour = activity_by_hour.with_column((polars.col('activity') > 0).cast(polars.Int32).alias('awake'))\nactivity_by_hour = activity_by_hour.with_column((polars.col('awake').cumsum() * polars.col('awake')).alias('awake_period'))\n\n# Define sleep periods as inverses of awake periods\nactivity_by_hour = activity_by_hour.with_column(polars.col('awake').reverse().cumsum().reverse().cast(polars.Int32).alias('sleep_period'))\n\n# Convert to Pandas for visualization\nactivity_by_hour_df = activity_by_hour.to_pandas()\n\n# Step 4: Visualize Data\nplt.figure(figsize=(15, 5))\nplt.plot(activity_by_hour_df['hour'], activity_by_hour_df['activity'], label='Activity')\nplt.fill_between(activity_by_hour_df['hour'], activity_by_hour_df['awake'] * activity_by_hour_df['activity'].max(), \n                 color='blue', alpha=0.3, label='Awake')\nplt.fill_between(activity_by_hour_df['hour'], (1 - activity_by_hour_df['awake']) * activity_by_hour_df['activity'].max(), \n                 color='red', alpha=0.3, label='Asleep')\nplt.xlabel('Hour')\nplt.ylabel('Activity Count')\nplt.legend()\nplt.title('Awake and Sleep Periods Over Last Month')\nplt.show()"
        }
    ]
}