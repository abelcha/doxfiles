{
    "sourceFile": "helpers/event_providers/cpu_load/cpu_load.c",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 6,
            "patches": [
                {
                    "date": 1716799952137,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1716799994832,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,8 +34,8 @@\n     // Trigger the event\n     sketchybar(trigger_message);\n \n     // Wait\n-    usleep(update_freq * 1000.000);\n+    usleep(0.1 * 1000000);\n   }\n   return 0;\n }\n"
                },
                {
                    "date": 1716800150922,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,8 +34,8 @@\n     // Trigger the event\n     sketchybar(trigger_message);\n \n     // Wait\n-    usleep(0.1 * 1000000);\n+    usleep(0.5 * 1000000);\n   }\n   return 0;\n }\n"
                },
                {
                    "date": 1716801635927,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,8 +32,9 @@\n              cpu.total_load                                        );\n \n     // Trigger the event\n     sketchybar(trigger_message);\n+    printf(\"trigger_message CPU:  %s\\n\", trigger_message);\n \n     // Wait\n     usleep(0.5 * 1000000);\n   }\n"
                },
                {
                    "date": 1716801697573,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,8 +35,8 @@\n     sketchybar(trigger_message);\n     printf(\"trigger_message CPU:  %s\\n\", trigger_message);\n \n     // Wait\n-    usleep(0.5 * 1000000);\n+    usleep(1 * 1000000);\n   }\n   return 0;\n }\n"
                },
                {
                    "date": 1716801720395,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,8 +35,8 @@\n     sketchybar(trigger_message);\n     printf(\"trigger_message CPU:  %s\\n\", trigger_message);\n \n     // Wait\n-    usleep(1 * 1000000);\n+    usleep(1 * 1000_000);\n   }\n   return 0;\n }\n"
                },
                {
                    "date": 1716805213275,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,9 +32,9 @@\n              cpu.total_load                                        );\n \n     // Trigger the event\n     sketchybar(trigger_message);\n-    printf(\"trigger_message CPU:  %s\\n\", trigger_message);\n+    // printf(\"trigger_message CPU:  %s\\n\", trigger_message);\n \n     // Wait\n     usleep(1 * 1000000);\n   }\n"
                }
            ],
            "date": 1716799952137,
            "name": "Commit-0",
            "content": "#include \"cpu.h\"\n#include \"../sketchybar.h\"\n\nint main (int argc, char** argv) {\n  float update_freq;\n  if (argc < 3 || (sscanf(argv[2], \"%f\", &update_freq) != 1)) {\n    printf(\"Usage: %s \\\"<event-name>\\\" \\\"<event_freq>\\\"\\n\", argv[0]);\n    exit(1);\n  }\n\n  alarm(0);\n  struct cpu cpu;\n  cpu_init(&cpu);\n\n  // Setup the event in sketchybar\n  char event_message[512];\n  snprintf(event_message, 512, \"--add event '%s'\", argv[1]);\n  sketchybar(event_message);\n\n  char trigger_message[512];\n  for (;;) {\n    // Acquire new info\n    cpu_update(&cpu);\n\n    // Prepare the event message\n    snprintf(trigger_message,\n             512,\n             \"--trigger '%s' user_load='%d' sys_load='%02d' total_load='%02d'\",\n             argv[1],\n             cpu.user_load,\n             cpu.sys_load,\n             cpu.total_load                                        );\n\n    // Trigger the event\n    sketchybar(trigger_message);\n\n    // Wait\n    usleep(update_freq * 1000.000);\n  }\n  return 0;\n}\n"
        }
    ]
}